<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>saevio</title>
  <icon>https://www.gravatar.com/avatar/029d105e488c9255f2c8ae58f697feb4</icon>
  <subtitle>welcome to my Blog. | ( ˙꒳​˙)</subtitle>
  <link href="https://saevio.cn/atom.xml" rel="self"/>
  
  <link href="https://saevio.cn/"/>
  <updated>2024-10-18T05:46:41.956Z</updated>
  <id>https://saevio.cn/</id>
  
  <author>
    <name>saevio</name>
    <email>1127499339@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>音视频下载&amp;剪辑</title>
    <link href="https://saevio.cn/2023/10/10/ffmpeg/"/>
    <id>https://saevio.cn/2023/10/10/ffmpeg/</id>
    <published>2023-10-09T16:00:00.000Z</published>
    <updated>2024-10-18T05:46:41.956Z</updated>
    
    <content type="html"><![CDATA[<p>ffmpeg&amp;yt-dlp</p><span id="more"></span><!-- more --><h2 id="FFmpeg自用教程"><a href="#FFmpeg自用教程" class="headerlink" title="FFmpeg自用教程"></a>FFmpeg自用教程</h2><p>下载链接:<a href="https://github.com/BtbN/FFmpeg-Builds/releases">https://github.com/BtbN/FFmpeg-Builds/releases</a></p><h3 id="视频格式转换"><a href="#视频格式转换" class="headerlink" title="视频格式转换"></a>视频格式转换</h3><p>在cmd输入ffmpeg -encoders查看编码器</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mkv -c:v <span class="built_in">copy</span> -c:aac output.mp4</span><br></pre></td></tr></table></figure><p><strong>-c copy</strong>复制音视频流</p><p><strong>-c:v</strong>选择视频编码器</p><p>常用av1编码器</p><p><strong>h264_amf</strong> amd的av1编码 speed:9</p><p><strong>libsvtav1</strong> intel的CPU speed:2.6</p><p><strong>av1_qsv</strong> intel的GPU编码器</p><p><strong>-c:a</strong>选择音频编码器</p><p><strong>aac</strong> 有损</p><p><strong>pcm_s16le</strong> 无损</p><p>批处理转换：</p><p>新建文本文档.txt，重命名为.bat，右键编辑粘贴</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /d &quot;%~dp0&quot;</span><br><span class="line">:softshare</span><br><span class="line"><span class="keyword">IF</span> &quot;%~<span class="number">1</span>&quot;==&quot;&quot; <span class="keyword">GOTO</span> :EOF</span><br><span class="line">ffmpeg -i &quot;%~<span class="number">1</span>&quot; -c:v <span class="built_in">copy</span> -c:a pcm_s16le -y &quot;%~dpn1_ok.mp4&quot;</span><br><span class="line"><span class="built_in">SHIFT</span> &amp; <span class="keyword">GOTO</span>:softshare</span><br></pre></td></tr></table></figure><p>“%~dp0” 是批处理文件所在目录，”%~1” 是拖入文件完整路径，包含后缀，”%~dpn1” 是拖入文件完整路径，不含后缀</p><h3 id="添加字幕"><a href="#添加字幕" class="headerlink" title="添加字幕"></a>添加字幕</h3><!DOCTYPE html><html><head>    <title>调试窗口</title>    <style>        #myInput {            width: 300px; /* 调整宽度为300像素 */            height: 40px; /* 设置高度为100像素 */            border: 3px solid #69b0ac;            }    </style></head><body>    <input type="text" value="ffmpeg -i 1.mp4 -vf subtitles=1.ass output.mp4" id="myInput">    <button onclick="copyText()" style="color: #26453d;">复制命令</button>    <script>        function copyText() {            var input = document.getElementById("myInput");            input.select();            document.execCommand("copy");}            // alert("已复制内容: " + input.value);        }    </script></body></html><p><strong>软字幕（悬挂在视频上方，可选择加载）</strong></p><div class="tag-plugin copy"><input class="copy-area" id="copy_1" value="ffmpeg -i 1.mp4 -i 1.ass -c:s mov_text -c:v copy -c:a copy output.mp4"><button class="copy-btn" onclick="util.copy(&quot;copy_1&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p><strong>硬字幕（与视频融为一体，不可拆分）</strong></p><p><strong>用cpu合成</strong></p><blockquote><p>ffmpeg -i 1.mp4 -vf subtitles&#x3D;1.ass output.mp4</p></blockquote><p>注意，按默认配置大概率会损失画质，请查看视频码率后按高于原视频的码率进行编解码（-b:v 6000k ）</p><blockquote><p>ffmpeg -i 1.mp4 -vf subtitles&#x3D;1.ass -b:v 6000k output.mp4</p></blockquote><p><strong>用AMD显卡合成</strong></p><blockquote><p>ffmpeg -i 1.mp4 -vf subtitles&#x3D;1.ass -c:v h264_amf output.mp4</p><p>ffmpeg -i 1.mp4 -vf subtitles&#x3D;1.ass -c:v h264_amf -b:v 6000k output.mp4</p></blockquote><p><strong>用NVIDIA显卡合成</strong></p><blockquote><p>ffmpeg -hwaccel cuda -c:v h264_cuvid -i 1.mp4 -vf subtitles&#x3D;1.ass  -c:v h264_nvenc  output.mp4</p></blockquote><p>字体样式设置</p><blockquote><p>subtitles&#x3D;input.srt:force_style&#x3D;’Fontsize&#x3D;10’</p></blockquote><h3 id="合并文件"><a href="#合并文件" class="headerlink" title="合并文件"></a>合并文件</h3><p>考虑到合并文件一般不多，所以通过文件重命名来进行合成，也方便排序</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#合并多个文件</span><br><span class="line">file &#x27;<span class="number">1</span>.mp4&#x27;</span><br><span class="line">file &#x27;<span class="number">2</span>.mp4&#x27;</span><br><span class="line">file &#x27;<span class="number">3</span>.mp4&#x27;</span><br><span class="line">#ffmpeg -f concat -i input.txt -c <span class="built_in">copy</span> output.mp4</span><br></pre></td></tr></table></figure><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a><a href="/font">字体</a></h3><p>我做了一个大部分免费商业字体汇总的页面<br>但为了实时预览，牺牲了大量负载,会加载很久（优化中）<br><a href="/font">点击跳转</a></p><h3 id="使用yt-dlp下载视频"><a href="#使用yt-dlp下载视频" class="headerlink" title="使用yt-dlp下载视频"></a>使用yt-dlp下载视频</h3><p>下载链接:<a href="https://github.com/yt-dlp/yt-dlp/releases">https://github.com/yt-dlp/yt-dlp/releases</a></p><p>常用，支持youtube，bilibili(需关闭浏览器以获取cookie)</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yt-dlp -f ba+bv --merge-output-<span class="built_in">format</span> mp4 --cookies-from edge 视频链接</span><br></pre></td></tr></table></figure><p>其中的–cookies-from edge其实也可以修改为–cookies-from chrome(但chrome新版在使用时外部无法获取cookie,需要关闭浏览器,取决于你在哪个浏览器登陆了账号)</p><p>保存并嵌入字幕</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--sub-langs all --embed-subs --embed-thumbnail</span><br></pre></td></tr></table></figure><p>b站:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--sub-langs zh-CN --embed-subs --embed-thumbnail</span><br></pre></td></tr></table></figure><p>可以这样添加到用户词典方便调用</p><p><img src="https://images.weserv.nl/?url=https://article.biliimg.com/bfs/article/c8cb22b79773fa888cf8b338c46bbc162fcffa1c.png" alt="自定义短语"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;ffmpeg&amp;amp;yt-dlp&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>网络管理期末总结</title>
    <link href="https://saevio.cn/2023/10/10/network%20design/"/>
    <id>https://saevio.cn/2023/10/10/network%20design/</id>
    <published>2023-10-09T16:00:00.000Z</published>
    <updated>2024-10-15T03:29:18.221Z</updated>
    
    <content type="html"><![CDATA[<p>备考资料</p><span id="more"></span><!-- more --><meta name="referrer" content="no-referrer"><ol><li><p>网络存储结构大致分为（）<br>A . 直连式存储(DAS)</p><p>B . 网络附加存储(NAS)</p><p>C . 区域存储网络(SAN)</p><p>D . 间接式存储</p></li></ol><blockquote><p>ABC</p></blockquote><ol start="2"><li><p>现在出厂的网络设备都符合IPv4 通用的路由标准，还强调兼容性的原因是()<br>A.不同品牌的网络设备不能互联互通</p><p>B.不同品牌的网络设备互联时可能会造成性能一定的下降</p><p>C.只要符合标准，不同的网络设备完全相互兼容，可以随意混杂使用</p><p>D.只是要求而已，只要兼容，可以互换</p></li></ol><blockquote><p>不同品牌的网络设备互联时可能会造成性能一定的下降</p></blockquote><ol start="3"><li><p>A类IP地址大型网络</p><p>B类IP地址中型网络</p><p>C类IP地址小型网络</p><p>保留IP地址局域网 </p></li><li><p>常见服务器分为哪几种?</p><p>A.塔式服务器 </p><p>B机架式服务器 </p><p>C刀片式服务器 </p><p>D.机柜式服务器</p></li><li><p>网络拓扑结构分层设计中,哪一层不能部署网络安全策略,必须采用冗余设计</p><p>A.核心层</p><p>B.汇聚层</p><p>C.接入层 （哪一层做接入时的授权鉴别操作）</p><p>D.用户终端</p><blockquote><p>核心层</p><p>核心层设备要避免做什么设置？</p><p><strong>哪一层必须采用冗余设计？</strong></p><p>核心层</p><p>哪一层做NAT转换？</p><p>汇聚层</p><p>三层中，那一层部署网络安全的操作？哪一层执行网络访问控制？<br>核心层、接入层</p></blockquote></li><li><p>数据库系统对服务器的技术需求不包括</p><p>A.CPU 处理能力强 </p><p>B.l&#x2F;0 处理能力强 </p><p>C.稳定性高 </p><p>D.内存大</p><blockquote><p>内存大</p></blockquote></li><li><p><strong>数字矩阵</strong> </p><p>• 实现对输入视频图像的切换输出</p><p>• 一个M×N矩阵：表示可以同时支持M路图像输入和N路图像输出。这里需要强调的是必须要做到任意，即任意的一个输入和任意的一个输出</p></li><li><p>常用网络技术，级联和堆叠的区别，优缺点</p><p><strong>级联</strong>：指在两台交换机的端口之间连接网线，将交换机连接在一起，实现相互之间的通信</p><p>可解决一台交换机端口数量不足的问题，也能够延伸网络的覆盖范围</p><p><strong>堆叠</strong>：堆叠是把交换机的背板带宽通过专用模块聚集在一起，这使堆叠交换机的总背板带宽是几台堆叠交换机的背板带宽之和，从而使得堆叠交换机集合能够作为一个整体进行管理</p><p>不是所有的交换机都可以堆叠，只有可管理的、模块化的特定交换机才具有堆叠管理功能</p><p>vpn，渗透树协议，链路聚合，DNS，DHCP，NAT</p></li><li><p>可以通过下列哪个现象判断出其为优质网线。</p><p>A.高温下外胶皮直接燃烧冒黑烟</p><p>B.铜芯细</p><p>C.网线很硬</p><p>D.外胶皮不易燃</p><blockquote><p>外胶皮不易燃</p></blockquote></li><li><p>高校校园网的特点有<br>A.宽带宽。<br>B.多功能整合。<br>C.专业性强。<br>D.封闭</p><blockquote><p>宽带宽<br>多功能整合<br>专业性强</p></blockquote></li><li><p>碰撞广播域偏向于广播</p></li></ol><p>​广播域数量限制在200</p><p>1-5 10-300 100-200 500-600</p><ol start="13"><li><p>摄像头分为哪四类：枪式摄像头，半球形摄像头，高速球形摄像头，带云台摄像头</p><p><strong>类型和适用场合</strong> </p><p>• 枪式：变焦范围大，适用于室外</p><p>• 半球式：固定，适用于室内，监控某一特定区域</p><p>• 球式：开阔区域的监控，多角度、大范围的监控</p><p>马路，楼顶，室内</p></li><li><p>无线路由器放置的位置最好在()。<br>A.地面 B.天花板 C.卫生间 D最西端墙<br>解答<br>天花板</p></li><li><p>超5类双绞线的RJ-45 接口使用的正确线序为</p><p>A.白橙、橙、白绿、蓝、白蓝、绿、白棕、棕 </p><p>B.白橙、橙白绿、绿、白蓝、蓝、白棕、棕 </p><p>C.橙、白橙、绿、白绿蓝、白蓝、棕、白棕 </p><p>D.白绿、绿、蓝、白蓝、白橙、橙白棕、棕<br>解答<br>白橙、橙、白绿、蓝、白蓝、绿、白棕、棕</p></li><li><p>一个机房有64台计算机,下列( )的设备选用较合适</p><p>A.2台32端口的交换机 </p><p>B.3 台24端口交换机 </p><p>C.1台64端口交换机 </p><p>D.1台40端口交换机<br>解答<br>B</p></li><li><p>一个机房有48台计算机，下列 ( B) 的设备选用较合适<br>A 一台40端口交换机<br>B 2台24端口交换机<br>C 一台48端口的交换机<br>D 1台64端口交换机</p></li><li><p>招标文件通常由下列哪一方制订(每人干什么的)<br>A投标公司<br>B 招标方<br>C 监理方<br>D 政府主管部门</p><blockquote><p>招标方</p></blockquote></li><li><p>网络工程4个定义</p></li><li><p>信息插座与电源插座的间距不小于20cm的原因是</p><p>A.防止漏电 </p><p>B.减少电磁干扰 </p><p>C.施工方便 </p><p>D.经验<br>解答<br>减少电磁干扰</p></li><li><p>使用电缆测试仪测量网线时,主控端顺序正常.副控端8个指示灯都亮但顺序错乱,最可能的原因是:<br>A.网线两端的接线顺序不同 </p><p>B.网线一端接触不良 </p><p>C.电缆测试仪故障 </p><p>D.电池电量不足<br>解答<br>网线两端的接线顺序不同</p><h2 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h2></li><li><p>线缆在桥架内垂直敷设时，在线缆的上端和每间隔1.5m处应固定在桥架的支架上；水平敷设时，在线缆的首、尾、转弯及每间隔5～10m处进行固定。 </p></li><li><p>设计网络时的基本原则是先设计核心层,再设计汇聚层,最后接入层。<br>解答<br>错误</p></li><li><p>PC机内存与服务器内存能通用<br>解答<br>错误</p></li><li><p>当你作为乙方 甲方领导要换届了 加快 延缓 停止<br> <img src="https://article.biliimg.com/bfs/article/92e73c7f58f7de3ee7b0d1f20432695a54d8b001.png" alt="image-20230516200134878"></p></li><li><p>交换机隔离冲突域，路由器隔离广播域和冲突域</p></li><li><p>通用cpu和超大规模集成电路哪一个性能更好，超大规模集成电路VLSI好</p></li><li><p><strong>机柜的容量单位</strong>是?<br>A.U B.F C.O D.P<br>解答<br>U</p></li><li><p>英译汉</p></li><li><p>【填空题】 Premises Distribution System（PDS）的通常汉译为<strong>综合布线系统</strong></p><p>网络工程4个阶段CDEF</p><p>启动</p><p>规划Development</p><p>实施Execution</p><p>收尾</p><p><strong>综合布线系统的专业名词</strong></p><p>建筑物布线系统（PDS，PremisesDistribution System）</p><p><strong>综合布线系统（GCS， GenericCabling System）</strong></p><p>开放式布线系统(OCS，Open CablingSystems)</p><p>结构化综合布线系统(SCS，StructuredCabling Systems）</p><p>Integrated Wiring System（疑问）</p><h2 id="综合布线系统"><a href="#综合布线系统" class="headerlink" title="综合布线系统"></a>综合布线系统</h2><p><strong>综合布线系统的组成：六个子系统</strong></p><ol><li>工作区（Work area Subsystem）</li><li>水平支干线（Horizontal Subsystem）</li><li>垂直主干线（Backbone Subsystem）</li><li>设备间（Equipment Subsystem）</li><li>管理（Administration Subsystem）</li><li>建筑群（Building Group System）</li></ol><p>RFID</p><p>子网划分</p><p>案例题</p></li></ol><p>结构化布线系统是由哪些子系统组成的?试根据结构化布线系统的示意图，说明每个子2.<br>系统的功能及其相互之间关系。<img src="C:/Users/saevio/AppData/Local/Temp/WeChat%20Files/26d92b7905a3833c22329ff3af66b75.jpg" alt="26d92b7905a3833c22329ff3af66b75"></p><p>一、工作区子系统<br>　　一个独立的需要设置终端的区域，即一个工作区，工作区子系统应由(水平)布线系统的信息插座，延伸到工作站终端设备处的连接电缆及适配器组成。<br>　<img src="https://img-blog.csdnimg.cn/20210705174925978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JsYWNrX3p0NjY2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>二、水平(布线)子系统<br>　　配线子系统由工作区用的信息插座，每层配线设备至信息插座的配线电缆、楼层配线设备和跳线等组成。</p><p>　　<img src="https://img-blog.csdnimg.cn/20210705174935424.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JsYWNrX3p0NjY2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>三、垂直(干线)子系统<br>　　干线子系统应由设备间的配线设备和跳线以及设备间至各楼层配线间的连接电缆组成。<br>　　<img src="https://img-blog.csdnimg.cn/20210705174943739.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JsYWNrX3p0NjY2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>四、设备间子系统<br>　　设备间是在每一幢大楼的适当地点设置进线设备、<strong>进行网络管理以及管理人员值班的场所</strong>。设备间子系统由综合布线系统的建筑物进线设备、电话、数据、计算机等各种主机设备及其保安配线设备等组成。<br>　　<br>五、管理子系统<br>　　管理子系统设置在每层配线设备的房间内。管理子系统应由交接间的配线设备，输入&#x2F;输出设备等组成，管理子系统也可应用于设备间子系统。<br>　　<br>六、建筑群子系统<br>　　建筑群子系统由两个及两个以上建筑物的电话、数据、电视系统组成一个建筑群综合布线系统，<strong>包括连接各建筑物之间的缆线和配线设备(CD)</strong>,组成建筑群子系统。<br>　　<img src="https://img-blog.csdnimg.cn/20210705174959357.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JsYWNrX3p0NjY2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>路由器交换机四个使用原则，结合案例</p><h2 id="交换机和路由器的区别是什么"><a href="#交换机和路由器的区别是什么" class="headerlink" title="交换机和路由器的区别是什么"></a>交换机和路由器的区别是什么</h2><p>1.端口数小于24选路由器，大于24选交换机</p><p>2.路经选择，多条路径通向外网选路由器,一条反之</p><p>3.选择协议，路由器通过DHCP表进行IP地址分配，交换机无</p><p>路由器可以处理TCP&#x2F;IP,根据IP寻址</p><p>4.介质: 交换机只能用双绞线，路由器可以用多种网络介质</p><h2 id="存储容量计算"><a href="#存储容量计算" class="headerlink" title="存储容量计算"></a>存储容量计算</h2><p><strong>存储容量&#x3D;码流×时间×视频路数÷8&#x3D;N(Byte)</strong></p><p><strong>时间&#x3D;监控天数x24小时x3600秒</strong></p><p>8个摄像头，码流512kbps，每天定时录像12小时，录像资料保留15天，需要多大的存储空间?<br>存储容量 &#x3D;码流x时间x视频路数÷8 &#x3D;N(Byte)<br>&#x3D; 码流x(监控天数x12小时x3600秒)x视频路数÷8<br>&#x3D;512x(15x12x3600) x8÷8<br>&#x3D;331776000(kB)<br>&#x3D;331776000:1024&#x3D;225MB</p><h2 id="布线线缆长度计算"><a href="#布线线缆长度计算" class="headerlink" title="布线线缆长度计算"></a>布线线缆长度计算</h2><p><strong>楼层总线缆长度：</strong></p><p><strong>C&#x3D;[0.55(L+S)+2倍楼层高度] x n</strong></p><p><strong>线缆箱数：</strong><br><strong>所需箱数 &#x3D; 信息插座数量&#x2F;(每箱长度÷水平线平均长度)</strong><br><strong>水平线平均长度&#x3D; 0.55(L+S)+2倍楼层高度</strong></p><p>楼层高4.5米，信息点距离配线间最远距离80m，最短距离18m，每箱网线长度303m，全楼1200个信息插座需要网线多少箱?</p><h2 id="子网划分"><a href="#子网划分" class="headerlink" title="子网划分"></a>子网划分</h2><p>一个C类地址192.168.143.0，网内可有至多140台主机。要将该网分成6个子网，每个子网能容纳25台机器</p><p>解:考虑到要去除两个保留的特殊子网地址，至少需要8个子网则n&#x3D;3，新的子网掩码为: 192.168.143&#x2F;27，而每个子网可容纳的主机数量为25-2&#x3D;30</p><p>子网划分:</p><p><img src="https://article.biliimg.com/bfs/article/809bcf99ae1bc886425bf2dd66394872cfbc8402.png" alt="image-20230516204307523"></p><p>假设你是网管，</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;备考资料&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>信息安全技术实验</title>
    <link href="https://saevio.cn/2023/10/10/Network%20Security%20Technology/"/>
    <id>https://saevio.cn/2023/10/10/Network%20Security%20Technology/</id>
    <published>2023-10-09T16:00:00.000Z</published>
    <updated>2024-10-15T03:29:18.213Z</updated>
    
    <content type="html"><![CDATA[<p>分享下答案</p><span id="more"></span><!-- more --><meta name="referrer" content="no-referrer"><h1 id="该实验会记录时长，建议先完成至综合测验部分（中途不需要挂在网页后台），一段时间后再写实验总结"><a href="#该实验会记录时长，建议先完成至综合测验部分（中途不需要挂在网页后台），一段时间后再写实验总结" class="headerlink" title=" 该实验会记录时长，建议先完成至综合测验部分（中途不需要挂在网页后台），一段时间后再写实验总结"></a><font color='red'> 该实验会记录时长，建议先完成至综合测验部分（中途不需要挂在网页后台），一段时间后再写实验总结</font></h1><h2 id="实验1"><a href="#实验1" class="headerlink" title="实验1"></a>实验1<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/%s.png"/></span></h2><h3 id="信息扫描课程"><a href="#信息扫描课程" class="headerlink" title="信息扫描课程"></a>信息扫描课程</h3><h4 id="主机信息扫描"><a href="#主机信息扫描" class="headerlink" title="主机信息扫描"></a>主机信息扫描</h4><p><a href="https://mengchunm.github.io/font">https://mengchunm.github.io/font</a></p><details class="tag-plugin colorful folding" child="codeblock"><summary><span>主机信息探测实验</span></summary><div class="body"><p>DDDDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>端口服务探测实验</span></summary><div class="body"><p>ABDCA</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>操作系统指纹探测实验</span></summary><div class="body"><p>【填空题】直接ping目标主机的时，数据包是默认发送了____个。（见图1覆盖箭头，请按标准填写）</p><p>【正确答案】：4</p><p>【填空题】使用nmap –O命令得到的系统指纹结果中，可以看到netbios-ssn服务所开启的端口是____（见图4覆盖处，请按标准填写）</p><p>【正确答案】：139</p><p>BCABD</p></div></details><h4 id="网络信息扫描"><a href="#网络信息扫描" class="headerlink" title="网络信息扫描"></a>网络信息扫描</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>路由信息探测实验</span></summary><div class="body"><p>DABB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>交换式网络嗅探实验</span></summary><div class="body"><p>【填空题】在设置过滤规则时，协议捕编辑是选项卡的第四个选项是____【见图15中覆盖部分】</p><p>【正确答案】：Advanced</p><p>【填空题】在进行对FTP数据捕获的结果中，可以看到USER用户名是____（见图29覆盖处，请按标准填写）</p><p>【正确答案】：test</p><p>CDADB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>网络连通探测实验</span></summary><div class="body"><p>【单选题】如上图3，ping 127.0.0.1时，发送数据为多少字节 ？</p><p>A. 32</p><p>B. 256</p><p>C. 64</p><p>D. 128</p><p>【正确答案】：C</p><p>ACDBD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>局域网信息探测实验</span></summary><div class="body"><p>【单选题】在定制扫描选项时，“General”选项卡中“Max.threads”最大可以取值为【 】</p><p>A. 500</p><p>B. 1000</p><p>C. 2000</p><p>D. 100</p><p>【正确答案】：B</p><p>DBDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>DNS域名信息探测实验</span></summary><div class="body"><p>DDABD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>网络注册信息探测实验</span></summary><div class="body"><p>使用whois.chinaz.com站长之家查询注册信息结果中，可以得到baidu的创建时间____（见图4覆盖处，请按标准填写）</p><p>【正确答案】：1999年10月11日</p><p>【填空题】使用whoistd工具查询注册信息结果中，可以得到的注册商Registrar是____（见图6覆盖处，请按标准填写）</p><p>【正确答案】：MarkMonitor, Inc.</p><p>DCABB</p></div></details><h4 id="网络信息获取"><a href="#网络信息获取" class="headerlink" title="网络信息获取"></a>网络信息获取</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>网站后台扫描</span></summary><div class="body"><p>【填空题】wscan完成扫描后，在扫描结果中可以找到到地址http：&#x2F;&#x2F;100.100.0.6&#x2F;admin.asp?action&#x3D;____（见图6覆盖处，请按标准填写）</p><p>【正确答案】：login</p><p>BDBCA</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>综合扫描（X-scan）实验</span></summary><div class="body"><p>【填空题】在X-scan端口配置的预设知名服务端口中，pop3的端口号为____（见图12覆盖处，请按标准提填写）</p><p>【正确答案】：110</p><p>【填空题】在X-scan扫描结果报告中，可以看到漏洞“SMB运行在445端口”的风险等级是____（见图18覆盖处，请按标准填写）</p><p>【正确答案】：中</p><p>BCADD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>综合扫描（Nessus）实验</span></summary><div class="body"><p>【填空题】在新建扫描模板时，扫描类型Type为Run Now、Scheduled和____（见图26覆盖处，请按标准填写）</p><p>【正确答案】：Template</p><p>BAADD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Wireshark抓包实验</span></summary><div class="body"><p>【填空题】在抓包过程中，深蓝色的数据报文为____（见步骤1.5文字解释，请按标准填写）</p><p>【正确答案】：DNS</p><p>DCBCB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Wireshark工具的使用与TCP数据包分析实验</span></summary><div class="body"><p>【填空题】 FTP协议的抓包中，操作机发送请求时的信息是pass____，表示操作机以发送pass命令。（见图9覆盖处，请按标准填写）</p><p>【正确答案】：123456</p><p>CBDAC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>手工信息收集1</span></summary><div class="body"><p>【填空题】当一个搜索蜘蛛访问一个站点时，它会首先检查该站点根目录下是否存在____（答案见步骤1.1，请按标准填写）</p><p>【正确答案】：robots.txt</p><p>【填空题】发现网站有.git目录，重塑网页代码用到的工具是____（请按标准填写，注意大小写）</p><p>【正确答案】：GitHack</p><p>AABDD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>手工信息收集2</span></summary><div class="body"><p>我也不会，哈哈</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>工具扫描</span></summary><div class="body"><p>【填空题】hydra指定扫描用户名的参数是____（注意使用英文字符，注意大小写）</p><p>【正确答案】：-l</p><p>【填空题】BurpSuite的默认监听（拦截）端口为____</p><p>【正确答案】：8080</p><p>DCB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>信息收集</span></summary><div class="body"><p>【单选题】从哪可以搜集到网站相关信息</p><p>A. LOGO</p><p>B. 标题</p><p>C. 版权所有</p><p>D. A、B、C</p><p>【正确答案】：D</p><p>DBACD</p></div></details><h3 id="漏洞扫描课程"><a href="#漏洞扫描课程" class="headerlink" title="漏洞扫描课程"></a>漏洞扫描课程</h3><h4 id="系统漏洞扫描"><a href="#系统漏洞扫描" class="headerlink" title="系统漏洞扫描"></a>系统漏洞扫描</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>系统漏洞探测（Fluxay）实验</span></summary><div class="body"><p>【填空题】在高级扫描设置界面中，可以看到目标系统可以设置为ALL、Windows NT&#x2F;2000、____（见图5覆盖处，请按标准填写）</p><p>【正确答案】：Linux&#x2F;Unix</p><p>【填空题】在对FTP主机中的所有name设置扫描时，扫描的主机类型有POP3、FTP、NT&#x2F;98、IIS&#x2F;FRONT PAGE和____（见图13覆盖处，请按标准填写）</p><p>【正确答案】：SQL</p><p>DBCA</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>利用retina探测系统弱点实验</span></summary><div class="body"><p>DADBA</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Serv-U目录遍历漏洞扫描实验</span></summary><div class="body"><p>【填空题】在Nessus中添加新的扫描策略时，setting type有Basic、Port Scanning、Performance、Advanced四种。（见图6覆盖处，请按标准填写）</p><p>【正确答案】：Port Scanning</p><p>【填空题】在查看“Ftpfiles.txt”文件时，可以得到文件内容为：This is a ftp site test file!（见图18覆盖处，请按标准填写）</p><p>【正确答案】：ftp</p><p>AAADB</p></div></details><h4 id="网站漏洞扫描"><a href="#网站漏洞扫描" class="headerlink" title="网站漏洞扫描"></a>网站漏洞扫描</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>网站漏洞扫描（Wapiti）实验</span></summary><div class="body"><p>【填空题】示例XSS漏洞是以什么HTTP方法传递参数的GET（填写“GET”或“POST”，注意大小写）</p><p>【正确答案】：GET</p><p>CCCD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Iiswrite漏洞扫描实验</span></summary><div class="body"><p>【填空题】在查看目标机网站漏洞时，右键可以看到选项有Visit web(浏览网站)、Put file（上传文件）、Export（导出列表）和Delete（见图4覆盖处，请按标准填写）</p><p>【正确答案】：Delete</p><p>【填空题】试验中禁止webda后，再次用iisputscanner扫描网站时，就看不到该漏洞了，说明漏洞已经修补成功，其中扫描结果“PUT”状态为NO（见图16覆盖处，请按标准填写）</p><p>【正确答案】：NO</p><p>DACA</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>网站漏洞扫描（owasp-zap）实验</span></summary><div class="body"><p>【填空题】<br>查看owasp zap工具的编码&#x2F;解码功能时，当输入 “basic”该字符的md5哈希值为F17AAABC20BFE045075927934FED52D2（见图16覆盖处，请按标准填写）</p><p>【正确答案】：F17AAABC20BFE045075927934FED52D2</p><p>BCCD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>网站漏洞扫描（Vega）实验</span></summary><div class="body"><p>【填空题】选择的默认扫描模块中是否包含扫描XSS漏洞的模块是（ 回答“是”或“否”）</p><p>【正确答案】：是</p><p>BDBD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>综合漏洞探测（Nessus）实验</span></summary><div class="body"><p>【填空题】在Nessus中添加新的扫描策略时，setting type有Basic、Port Scanning、Performance、Advanced四种。（见图5覆盖处，请按标准填写）</p><p>【正确答案】：Performance</p><p>ADABCA</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>AWVS工具收集</span></summary><div class="body"><p>ACBAC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>APPSCAN信息收集</span></summary><div class="body"><p>【填空题】本次爬区页面使用的扫描模式是（填写“完全扫描”或“仅探索”或“仅测试”）仅探索</p><p>【正确答案】：仅探索</p><p>CCB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>BurpSuite信息收集</span></summary><div class="body"><p>BBACD</p></div></details><h2 id="实验2"><a href="#实验2" class="headerlink" title="实验2"></a>实验2<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/%s.png"/></span></h2><h3 id="KALI应用课程"><a href="#KALI应用课程" class="headerlink" title="KALI应用课程"></a>KALI应用课程</h3><h4 id="kalli信息收集"><a href="#kalli信息收集" class="headerlink" title="kalli信息收集"></a>kalli信息收集</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-安全渗透测试一般流程实验</span></summary><div class="body"><p>CBBDD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-信息搜集之GoogleHack实验</span></summary><div class="body"><p>ABDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-信息搜集之目标获取实验</span></summary><div class="body"><p>【填空题】使用 Dig 命令对163.com进行测试时，AUTHORITY SECTION 的type类型是 SOA （见图6覆盖处，请按标准填写）</p><p>【正确答案】：SOA</p><p>【填空题】在使用dnsenum对163.com进行测试时，其结果中主机地址（Host’s addresses）信息的类型是 A （见图13覆盖处，请按标准填写）</p><p>【正确答案】：A</p><p>DBDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-信息搜集之主机探测实验</span></summary><div class="body"><p>【填空题】使用命令dmitry 163.com，查看其网站的端口信息时，可以得到其网站的80端口状态为 open （见图11覆盖处，请按标准填写）</p><p>【正确答案】：open</p><p>【填空题】使用wafw00f <a href="http://www.baidu.com/">www.baidu.com</a> 命令查看waf防护时，其结果中出现 “the site http：&#x2F;&#x2F;<a href="http://www.baidu.com/">www.baidu.com</a> seems to be behind a WAF”,表明存在waf产品防护。（见图14覆盖处，请按标准填写）</p><p>【正确答案】：behind</p><p>CDDA</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-信息搜集之主机扫描实验</span></summary><div class="body"><p>【填空题】nmap扫描结果中，21端口的服务SERVICE是 ftp （见图14覆盖处，请按标准填写）</p><p>【正确答案】：ftp</p><p>CCCB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-信息搜集之指纹识别实验</span></summary><div class="body"><p>【填空题】以telnet 命令连接端口进行探测时，结果中可以看出ftp服务器软件及版本信息为：FileZilla Server version 0.9.46 beta（见图2覆盖处，请按标准填写）.</p><p>【正确答案】：FileZilla</p><p>【填空题】在查看p0f截取的数据时，可以得到其参数params&#x3D; none（见图8覆盖处，请按标准填写）</p><p>【正确答案】：none</p><p>DDCC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-信息搜集之协议分析实验</span></summary><div class="body"><p>【填空题】使用命令sslscan <a href="http://www.alipay.com/">www.alipay.com</a> 查看支付宝证书信息时，结果中Testing SSL server <a href="http://www.alipay.com/">www.alipay.com</a> on port 443是测试SSL服务器使用的端口号（见图10覆盖处，请按标准填写）</p><p>【正确答案】：443</p><p>CABD</p></div></details><h4 id="Kali漏洞分析"><a href="#Kali漏洞分析" class="headerlink" title="Kali漏洞分析"></a>Kali漏洞分析</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali- 漏洞分析之OpenVAS安装实验</span></summary><div class="body"><p>DDBA</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞分析之OpenVAS使用实验</span></summary><div class="body"><p>【填空题】查看漏洞结果中远程攻击目标有http：&#x2F;&#x2F;100.100.0.15&#x2F;vicnum&#x2F; test.php （见图19覆盖处，请按标准填写，IP以实际实验为准）</p><p>【正确答案】：test.php</p><p>DBDD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞分析之扫描工具实验</span></summary><div class="body"><p>【填空题】使用lynis命令查看系统信息时，其结果中报告版本Report Version为 1.0（见图10覆盖处，请按标准填写）</p><p>【正确答案】：1.0</p><p>【填空题】在漏洞检测结果中，可以得到记录的主机名Assuming the OS is是linux（见图12覆盖处，请按标准填写）</p><p>【正确答案】：linux</p><p>DBBC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞分析之WEB爬行实验</span></summary><div class="body"><p>【填空题】在对目标机进行dirb命令进行目录扫描结果中，其列表文件位置为WORDLIST_FILES:&#x2F;usr&#x2F;share&#x2F;dirb&#x2F; wordlists&#x2F;common.txt（见图10覆盖处，请按标准填写）</p><p>【正确答案】：wordlists</p><p>【填空题】工具Vega的扫描漏洞结果中，可以看到SQL注入漏洞中http：&#x2F;&#x2F;100.100.0.16&#x2F; WackoPicko&#x2F;users&#x2F;login.php的Method为POST（见图22覆盖处，请按标准填写，IP以实际实验为准）</p><p>【正确答案】：POST</p><p>DACD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞分析之WEB漏洞扫描（一）实验</span></summary><div class="body"><p>【填空题】可以看到目标机DavTestDir_sg28HqTdwIX6bG文件中新上传的文件后缀为asp、 aspx、cfm、cgi、html、jhtml、jsp、php、pl、shtml、txt。（见图10覆盖处，请按标准填写）</p><p>【正确答案】：aspx</p><p>【填空题】使用 “–version”的命令结果中，可以得到其版本为0.2 （见图13覆盖处，请按标准填写）</p><p>【正确答案】：0.2</p><p>【填空题】全面扫描结果中，可以看到其扫描方法Method为GET（见图23覆盖处，请按标准填写）</p><p>【正确答案】：GET</p><p>CABDCD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞分析之WEB漏洞扫描（二）实验</span></summary><div class="body"><p>【填空题】关于joomscan结果中可以看到，joomscan版本 0.0.7？。（见图4覆盖处，请按标准填写）</p><p>【正确答案】：0.0.7</p><p>【填空题】在浏览器中查看报告信息，可以得到发现的漏洞数目为4（见图30覆盖处，请按标准填写）</p><p>【正确答案】：4</p><p>DDCB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞分析之数据库评估（一）实验</span></summary><div class="body"><p>【填空题】破解成功后，可以看到目标服务器的用户名为 root，密码为hongya。（见图13覆盖处，请按标准填写）</p><p>【正确答案】：root</p><p>CDDD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞分析之数据库评估（二）实验</span></summary><div class="body"><p>【填空题】查看版本信息是，可以得到目标操作系统为32位（见图2覆盖处，请按标准填写）</p><p>【正确答案】：32</p><p>【填空题】请将图12中覆盖处的内容写出来mysql（见图14中覆盖处，请按标准填写）</p><p>【正确答案】：mysql</p><p>【填空题】请将图中覆盖处的内容写出来V4FP（见图17中覆盖处，请按标准填写）</p><p>【正确答案】：V4FP</p><p>CBDD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞分析之Web应用代理实验</span></summary><div class="body"><p>【填空题】Burp拦截结果中，可以看到其Accept-Language为en- US，en；q&#x3D;0.5。（见图7覆盖处，请按标准填写）</p><p>【正确答案】：US</p><p>【填空题】报告结果中可以看到中等警报Medium个数为 3 （见图26覆盖处，请按标准填写）</p><p>【正确答案】：3</p><p>DBCDB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞分析之BurpSuite实验</span></summary><div class="body"><p>【填空题】在burp拦截的数据中，看可以看到登陆请求数据包的投递地址为http：&#x2F;&#x2F;100.100.0.36&#x2F;admin&#x2F; login .asp（见图10覆盖处，请按标准填写）</p><p>【正确答案】：login</p><p>【填空题】破解结果中， 可以看到密码为qwerasdf的状态状态Status是302 ，其返回长度不同于其他返回数据包，很有可能是猜解出来的密码。（见图19覆盖处，请按标准填写）</p><p>【正确答案】：302</p><p>【填空题】成功登录后台管理后，点击分类管理，可以看到有三个模块：大类管理、小类管理、 类别转移（见图22覆盖处，请按标准填写）</p><p>【正确答案】：类别转移</p><p>DCDDD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞分析之Fuzz工具实验</span></summary><div class="body"><p>DACBD</p></div></details><h4 id="Kali密码攻击"><a href="#Kali密码攻击" class="headerlink" title="Kali密码攻击"></a>Kali密码攻击</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali- 密码攻击之在线攻击工具实验</span></summary><div class="body"><p>【填空题】使用findmyhash破解密码结果中可知结果为 1（见图12覆盖处，请按标准填写）</p><p>【正确答案】：1</p><p>【填空题】命令破解ssh的结果中，可以得到目标机100.100.0.16的用户名:root，密码：123456，其服务是ssh，端口为22（见图20覆盖处，请按标准填写）</p><p>【正确答案】：22</p><p>【填空题】在medusa暴力破解结果中，可以得到User：root，password： 123456（见图22覆盖处，请按标准填写）</p><p>【正确答案】：123456</p><p>【填空题】枚举结果中可以得到其candidate为“123456”，size为30（见图33覆盖处，请按标准填写）</p><p>【正确答案】：30</p><p>DDDCCB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-密码攻击之离线攻击工具（一）实验</span></summary><div class="body"><p>【填空题】创建结果中可以看到生成659TB大的文件，一共有 66155263819776 行。（见图3覆盖处，请按标准填写）</p><p>【正确答案】：66155263819776</p><p>【填空题】破解结果中可以看出，哈希值d111b38c0e73bc867c4bad4023606a0e0df64c2f的原文密码为 password01 （见图19覆盖处，请按标准填写）</p><p>【正确答案】：password01</p><p>【填空题】判断结果中，可以得到哈希值2132f297a5a7a5a743894a0e4a801fc3的加密方式可能为MD2 、MD5、MD4、Double MD5等。（见图22覆盖处，请按标准填写）</p><p>【正确答案】：MD2</p><p>【填空题】从输出的信息中，可以看到6bcec2ba2597f089189735afeaa300d4哈希值可能是使用MD5加密的。（见图25覆盖处，请按标准填写）</p><p>【正确答案】：MD5</p><p>【填空题】查看破解结果，可以看到John成功破解了1个账户密码，其用户名为 root，密码为123456。（见图30覆盖处，请按标准填写）</p><p>【正确答案】：root</p><p>【填空题】破解结果中，可以看到一个账户密码破解成功，即User：root，Password： 123456（见图34覆盖处，请按标准填写）</p><p>【正确答案】：123456</p><p>CCCBDA</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-密码攻击之离线攻击工具（二）实验</span></summary><div class="body"><p>【填空题】结果中可以得到哈希值：ab56b4d92b40713acc5af89985d4b786的 破解结果是 abcde（见图覆盖处，请标准填写）</p><p>【正确答案】：abcde</p><p>【填空题】实验中正确载入哈希值之后，可以看到LM Pwd2为empty（见图11覆盖处，请按标准填写）</p><p>【正确答案】：empty</p><p>【填空题】破解成功后，可以按到LM Pwd 1是 123456 （见图12覆盖处，请按标准填写）</p><p>【正确答案】：123456</p><p>DECD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-密码攻击之哈希传递攻击实验</span></summary><div class="body"><p>【填空题】从返回的哈希值中可以看到第一个用户为 Administrator（见图4覆盖处，请按标准填写）</p><p>【正确答案】：Administrator</p><p>EDAD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-无线安全分析工具实验</span></summary><div class="body"><p>EDCB</p></div></details><h4 id="Kali漏洞利用"><a href="#Kali漏洞利用" class="headerlink" title="Kali漏洞利用"></a>Kali漏洞利用</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞利用之检索与利用实验</span></summary><div class="body"><p>【填空题】在相关的漏洞描述中， 可以看到mssql7.0的远程DOS漏洞路径为：&#x2F;usr&#x2F;share&#x2F;exploitdb&#x2F;platforms&#x2F;.&#x2F;windows&#x2F;dos&#x2F; 562图4覆盖处，请按标准填写）</p><p>【正确答案】：562</p><p>ADBD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞利用之Metasploit基础实验</span></summary><div class="body"><p>【填空题】在预配置模块中，可以看到模块有auxiliary、exploit、payload和post（见图6覆盖处，请按标准填写）</p><p>【正确答案】：post</p><p>【填空题】目标机访问<code>http://100.100.0.15:8080/EXxX3ns4</code>时，查看其PDF内容为：Hello World !（见图23覆盖处，请按标准填写）</p><p>【正确答案】：World</p><p>DACADD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞利用之Meterpreter介绍实验</span></summary><div class="body"><p>【填空题】show命令的使用说明结果中，可以得到其可用的模板有all,encoders,nops,exploits,payloads,auxiliary,plugins,info,options.（见图5覆盖处，请按标准填写）</p><p>【正确答案】：payloads</p><p>【填空题】使用命令“sysinfo”查看系统信息时，可以得到目标机OS信息 3.10.0 （见图14覆盖处，请按标准填写）</p><p>【正确答案】：3.10.0</p><p>ABDDDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞利用之Metasploit渗透测试实验</span></summary><div class="body"><p>DEAB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞利用之BeEF实验</span></summary><div class="body"><p>【填空题】结果中可以看到beef主页检测到在线主机IP为127.0.0.1（即本机），点击右边“Details”查看详细信息，可以知道其浏览器版本Browser Version为 31（见图4覆盖处，请按标准填写）</p><p>【正确答案】：31</p><p>【填空题】实验发起攻击后，可以看到返回值为hongyaa，攻击成功。（见图7覆盖处，请按标准填写）</p><p>【正确答案】：hongyaa</p><p>【填空题】进入配置文件查看到其中的pass这是与metasploit通信约定的密码，其默认为 abc123（见图16覆盖处，请按标准填写）</p><p>【正确答案】：abc123</p><p>BADBB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-漏洞利用之SET实验</span></summary><div class="body"><p>【填空题】点击查看登陆记录，可以看到其PersistentCookie状态为 yes（见图9覆盖处，请按标准填写）</p><p>【正确答案】：yes</p><p>BABABD</p></div></details><h4 id="Kali权限维持"><a href="#Kali权限维持" class="headerlink" title="Kali权限维持"></a>Kali权限维持</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-嗅探欺骗与中间人攻击实验</span></summary><div class="body"><p>【填空题】其配置完成页面中，可以看到信息GROUP 2：ANY (all the hosts in the list)（见图8覆盖处，请按标准填写）</p><p>【正确答案】：ANY</p><p>【填空题】目标机登陆后，操作机中得到信息DHCP：【FA:16:3E:4E:93:4C】REQUEST 100.100.0.8（见图10覆盖处，请按标准填写，目标IP及MAC地址以实验为准）</p><p>【正确答案】：REQUEST</p><p>BCCDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-权限维持之后门实验</span></summary><div class="body"><p>【填空题】可以看到webshell的代码已经被处理过，其代码为$b&#x3D;strrev(“edoced_4”. 6esab”)。（见图2覆盖处，请按标准填写）</p><p>【正确答案】：6esab</p><p>【填空题】连接成功后，使用whoami命令查看目标机操作用户是，其结果为www-data（见图5覆盖处，请按标准填写）</p><p>【正确答案】：www-data</p><p>【填空题】连接端使用命令whoami查看用户，可以看到其结果为root（见图7覆盖处，请按标准填写）</p><p>【正确答案】：root</p><p>DBCD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-权限维持之Tunnel实验</span></summary><div class="body"><p>ADDD</p></div></details><h4 id="Kali测试分析"><a href="#Kali测试分析" class="headerlink" title="Kali测试分析"></a>Kali测试分析</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-逆向工程工具实验</span></summary><div class="body"><p>DABBDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-压力测试工具实验</span></summary><div class="body"><p>【填空题】使用inviteflood进行攻击是可以看到用到目标主机的端口为 5060 （见图1覆盖处，请按标准填写）</p><p>【正确答案】：5060</p><p>【填空题】结果可以看到其攻击是将4569端口从4569端口泛洪10000次。（见图2覆盖处，请按标准填写）</p><p>【正确答案】：4569</p><p>DDCDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-数字取证工具实验</span></summary><div class="body"><p>【填空题】显示的测试项目结果中，可以看到其路径有&#x2F;usr&#x2F;sbin&#x2F;chkrootkit（见图4覆盖处，请按标准填写）</p><p>【正确答案】：sbin</p><p>【填空题】文件信息中可以看到文件VistaSP0x64适用于Windows Vista SP0 x64。（见图7覆盖处，请按标准填写）</p><p>【正确答案】：SP0</p><p>【填空题】计算aaa的档案结果中，可以得到结果e4773f6627362b74b185fa03ce37783a *aaa（见图12覆盖处，请按标准填写）</p><p>【正确答案】：*aaa</p><p>BCDCD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Kali-报告工具与系统服务实验</span></summary><div class="body"><p>【填空题】在查看主机开放端口时，可以看目标机开通了21端口，其服务server为ftp （见图11覆盖处，请按标准填写）</p><p>【正确答案】：ftp</p><p>【填空题】扫描完成后可以看到目标机端口25的服务SERVICE为 smtp（见图18覆盖处，请按标准填写）</p><p>【正确答案】：smtp</p><p>BDBDCA</p></div></details><h2 id="实验3"><a href="#实验3" class="headerlink" title="实验3"></a>实验3<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/%s.png"/></span></h2><h3 id="密码破解课程"><a href="#密码破解课程" class="headerlink" title="密码破解课程"></a>密码破解课程</h3><h4 id="本地密码破解"><a href="#本地密码破解" class="headerlink" title="本地密码破解"></a>本地密码破解</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Windows2003密码破解实验</span></summary><div class="body"><p>【填空题】请写出导出的本地密码散列文件的散列值是____（见图13覆盖处，请按标准填写）</p><p>【正确答案】：12BE6</p><p>【填空题】请使用SAMInside工具破解Windows本地密码散列文件得到的密码写出来是____（见图20覆盖处，请按标准填写）</p><p>【正确答案】：8967584106754</p><p>ADAB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>WindowsXP密码破解实验实验</span></summary><div class="body"><p>【单选题】以下哪个是破解出来“test”用户的密码？</p><p>A. 8967584106754</p><p>B. 896758410675</p><p>C. 9867584106754</p><p>D. 9867584106755</p><p>【正确答案】：A</p><p>ADD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Windows7系统本地密码破解实验</span></summary><div class="body"><p>【填空题】请将使用PwDump7获取的用户散列值结果写出来____（见图9覆盖处，请按标准填写）</p><p>【正确答案】：AD44</p><p>【填空题】请将使用ophcrack工具破解散列值过程中，成功添加彩虹表后“Status”结果写出来____（见图15覆盖处，请按标准填写）</p><p>【正确答案】：on disk</p><p>ABD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Windows系统密码本地查看实验</span></summary><div class="body"><p>【填空题】请将上述被遮盖的查看结果进行写出来____（见图8覆盖处，请按标准填写）</p><p>【正确答案】：123456</p><p>【填空题】请将上述被遮盖的查看结果进行写出来____（没错，和上题一模一样）</p><p>【正确答案】：123456</p><p>ADAB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Salt型密码散列本地破解实验</span></summary><div class="body"><p>【填空题】请将简单模式的破解结果写入____（见图7覆盖处，请按标准填写）</p><p>【正确答案】：1resu</p><p>【填空题】请将字典模式的破解结果写入____（见图8覆盖处，请按标准填写）</p><p>【正确答案】：just4me</p><p>【填空题】请将暴力模式的破解结果写入 ____</p><p>【正确答案】：38947829</p><p>DDDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Linux系统本地密码破解实验</span></summary><div class="body"><p>【填空题】请将上述被遮盖的破解结果进行写出来____（见图8覆盖处，请按标准填写）</p><p>【正确答案】：$6$6VM</p><p>【填空题】请将上述被遮盖的破解结果进行写出来____（见图10覆盖处，请按标准填写）</p><p>【正确答案】：adminuser</p><p>【填空题】请将上述被遮盖的破解结果进行写出来____（见图11覆盖处，请按标准填写）</p><p>【正确答案】：testpass</p><p>【填空题】请将上述被遮盖的破解结果进行写出来____（见图13覆盖处，请按标准填写）</p><p>【正确答案】：27861</p><p>CDBA CDBD</p></div></details><h4 id="远程密码破解"><a href="#远程密码破解" class="headerlink" title="远程密码破解"></a>远程密码破解</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>网络服务远程密码破解(Brutus)实验</span></summary><div class="body"><p>【填空题】请将Brutus破解 POP3密码后的结果写入591（见图4覆盖处，请按标准填写）</p><p>【正确答案】：591</p><p>【填空题】使用Bruter破解 POP3 密码形式下用户root的密码写入root1234（见图8覆盖处，请按标准填写）</p><p>【正确答案】：root1234</p><p>【填空题】使用 Bruter 基于密码字典破解MSSQL密码结果写入123456（见图10覆盖处，请按标准填写）</p><p>【正确答案】：123456</p><p>【填空题】使用 Bruter 基于密码字典破解HTTP密码的结果写入123456（见图17覆盖处，请按标准填写）</p><p>【正确答案】：123456</p><p>ABAAB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>网络服务远程密码破解（Hydra）实验</span></summary><div class="body"><p>【填空题】请将图2覆盖处使用 hydra 工具基于密码字典破解结果写出来1q2w3e4r</p><p>【正确答案】：1q2w3e4r</p><p>【填空题】请将图3覆盖处基于密码字典破解结果写出来123456</p><p>【正确答案】：123456</p><p>【填空题】请将图4覆盖处使用 hydra 工具基于字典破解结果写出来123456</p><p>【正确答案】：123456</p><p>【填空题】请将图7覆盖处使用 hydra 工具基于密码字典破解结果写出来123456</p><p>【正确答案】：123456</p><p>ABCB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>口令破解-01HASH基础实验</span></summary><div class="body"><p>【填空题】请将使用HashCale工具进行文件加密计算后的MD5值写出efd（见图3覆盖处，请按标准填写）</p><p>【正确答案】：efd</p><p>【填空题】请将使用WinMD5工具校验出的MD5值写出4532（见图5覆盖处，请按标准填写）</p><p>【正确答案】：4532</p><p>【填空题】请将加密后的MD5值写出7a57a5a743894a0e（见图7覆盖处，请按标准填写）</p><p>【正确答案】：7a57a5a743894a0e</p><p>【填空题】请将从网页上获得的MD5值写出499d（见图13覆盖处，请按标准填写）</p><p>【正确答案】：499d</p><p>CBA</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>口令破解MD5实验</span></summary><div class="body"><p>【填空题】请将“love”的MD5加密后的值填写出来 fe309af0f4d35982（答案见图3遮盖处，请标准填写）</p><p>【正确答案】：fe309af0f4d35982</p><p>DDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>access口令破解实验</span></summary><div class="body"><p>【填空题】请将使用access数据库操作口令破解结果写出来123456（见图3覆盖处，请按标准填写）</p><p>【正确答案】：123456</p><p>ACBAD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Office密码破解实验</span></summary><div class="body"><p>【填空题】请将破解出来的十六进制格式密码写出来3600（见图10覆盖处，请按标准填写）</p><p>【正确答案】：3600</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>wifi密码破解实验</span></summary><div class="body"><p>滑下去点下一实验就行</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>FTP远程密码破解实验</span></summary><div class="body"><p>【填空题】在TCP&#x2F;IP协议中，FTP标准命令TCP端口号为21，Port方式数据端口为20（答案见实验原理，请按标准阿拉伯数字填写）</p><p>【正确答案】：20</p><p>【填空题】在实验中，FTP破解工具通过数据端口和字典破解的结果为123456（答案如图11遮盖处，请按标准填写）</p><p>【正确答案】：123456</p><p>ADCBA</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>压缩文件解密实验</span></summary><div class="body"><p>【填空题】请将破解出来的16进制密码结果写出来（6位阿拉伯数字）313233（见图8覆盖处，请按标准填写）</p><p>【正确答案】：313233</p><p>CBA</p></div></details><h3 id="SQL注入漏洞攻击"><a href="#SQL注入漏洞攻击" class="headerlink" title="SQL注入漏洞攻击"></a>SQL注入漏洞攻击</h3><h4 id="SQL注入初探"><a href="#SQL注入初探" class="headerlink" title="SQL注入初探"></a>SQL注入初探</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>ASPX的SQL基础注入攻击实验</span></summary><div class="body"><p>【填空题】Pangolin程序查看到SQL注入漏洞目标机的数据库名称为master（答案详细见图9覆盖内容）</p><p>【正确答案】：master</p><p>【填空题】Pangolin自定义查询username like ‘admin%’查询到admin用户的密码为admin123（答案详细见图13覆盖内容）</p><p>【正确答案】：admin123</p><p>【填空题】Pangolin 的Dir Tree功能查看到数据库超级管理员sa的密码为123456（答案详细见图19覆盖内容）</p><p>【正确答案】：123456</p><p>BDDDA</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>jsp的mysql注入攻击实验</span></summary><div class="body"><p>??</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>PHP的SQL基础注入攻击实验</span></summary><div class="body"><p>【填空题】Pangolin程序查看到SQL注入漏洞目标机的数据库名称为wordpress（答案详细见图9覆盖内容）</p><p>【正确答案】：wordpress</p><p>【填空题】Pangolin自定义查询user_login like CHAR(37, 97, 100, 109, 105, 110, 37)查询到admin用户的email账号为<a href="mailto:&#97;&#x64;&#x6d;&#105;&#110;&#x40;&#x65;&#x78;&#97;&#109;&#x70;&#108;&#101;&#x2e;&#111;&#114;&#x67;">&#97;&#x64;&#x6d;&#105;&#110;&#x40;&#x65;&#x78;&#97;&#109;&#x70;&#108;&#101;&#x2e;&#111;&#114;&#x67;</a>（答案详细见图14覆盖内容）</p><p>【正确答案】：<a href="mailto:&#97;&#100;&#x6d;&#x69;&#x6e;&#x40;&#101;&#x78;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#x6f;&#114;&#x67;">&#97;&#100;&#x6d;&#x69;&#x6e;&#x40;&#101;&#x78;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#x6f;&#114;&#x67;</a></p><p>【填空题】Pangolin查看用户的基本属性，sys用户的主目录为&#x2F;dev（答案详细见图15覆盖内容）</p><p>【正确答案】：&#x2F;dev</p><p>DBDDA</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Mutillidae登录认证绕过实验</span></summary><div class="body"><p>【填空题】该实验利用如上方法进行sql注入绕过认证登录的用户名称为admin（答案详细见图8覆盖内容）</p><p>【正确答案】：admin</p><p>【填空题】11</p><p>【正确答案】：1</p><p>【填空题】11</p><p>【正确答案】：1</p><p>3【填空题】11</p><p>【正确答案】：1</p><p>4【填空题】11</p><p>【正确答案】：1</p><p>5【填空题】11</p><p>【正确答案】：1</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Mutillidae读取文件内容实验</span></summary><div class="body"><p>【填空题】file出错信息中查看出错文件的路径为&#x2F;owaspbwa&#x2F;mutillidae-git&#x2F;classes&#x2F;MySQLHandler.php（答案详细见图3覆盖内容,注意大小写）</p><p>【正确答案】：MySQLHandler.php</p><p>ADDDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Mutillidae获取数据库内容实验</span></summary><div class="body"><p>【填空题】该实验利用如上方法查询到当前数据库中“accounts”表的第三条数据列名为password（答案详细见图8覆盖内容）</p><p>【正确答案】：password</p><p>DDDDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>POST方式SQL注入攻击实验</span></summary><div class="body"><p>【填空题】sqlmap扫描wackopicko 库中 users 表的第9个用户是wanda（答案详细见图24覆盖内容）</p><p>【正确答案】：wanda</p><p>【填空题】sqlmap扫描wackopicko 库中 admin 表的第5个用户是bob（答案详细见图27覆盖内容）</p><p>【正确答案】：bob</p><p>ADADC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>GET方式SQL注入攻击实验</span></summary><div class="body"><p>【填空题】sql注入报错法获取到登录的用户名为admin（答案详细见图12覆盖内容）</p><p>【正确答案】：admin</p><p>【填空题】通过绕过waf过滤措施注入获取到admin用户的邮箱为<a href="mailto:&#x61;&#100;&#109;&#x69;&#110;&#x40;&#x65;&#x78;&#97;&#109;&#112;&#108;&#101;&#46;&#111;&#x72;&#103;">&#x61;&#100;&#109;&#x69;&#110;&#x40;&#x65;&#x78;&#97;&#109;&#112;&#108;&#101;&#46;&#111;&#x72;&#103;</a>（答案详细见图16覆盖内容）</p><p>【正确答案】：<a href="mailto:&#97;&#100;&#109;&#105;&#110;&#x40;&#x65;&#120;&#x61;&#x6d;&#x70;&#108;&#101;&#x2e;&#x6f;&#114;&#x67;">&#97;&#100;&#109;&#105;&#110;&#x40;&#x65;&#120;&#x61;&#x6d;&#x70;&#108;&#101;&#x2e;&#x6f;&#114;&#x67;</a></p><p>【填空题】sqlmap扫描到该实验目标机的PHP版本为5.5.9（答案详细见图24覆盖内容）</p><p>【正确答案】：5.5.9</p><p>【填空题】利用sqlmap的tamper脚本获取wordpress库中关于wp_users表的第一个用户名为admin（答案详细见图41覆盖内容）</p><p>【正确答案】：admin</p><p>ADADC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>SQL注入漏洞攻击实验</span></summary><div class="body"><p>【填空题】TamperData查看到Cache-Control取值为private（答案详细见图9覆盖内容）</p><p>【正确答案】：private</p><p>【填空题】sqlmap扫描到该实验目标机的iis版本为6.0（答案详细见图17覆盖内容）</p><p>【正确答案】：6.0</p><p>【填空题】字典猜解获取tb_admin表的admin用户密码为1b7f1c73a481e240（答案详细见图24覆盖内容）</p><p>【正确答案】：1b7f1c73a481e240</p><p>ADADC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>宽字符绕过转义防护的SQL注入攻击实验</span></summary><div class="body"><p>??</p></div></details><h4 id="手工SQL注入"><a href="#手工SQL注入" class="headerlink" title="手工SQL注入"></a>手工SQL注入</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>手工注入之MySQL注入基础实验</span></summary><div class="body"><p>【填空题】页面出错信息中查看警告文件的路径为&#x2F;var&#x2F;www&#x2F;html&#x2F;zvuldrill&#x2F;search.php（答案详细见图4覆盖内容,注意大小写）</p><p>【正确答案】：search.php</p><p>【填空题】本实验查询到admin的第三个列标题的内容是abc（答案详细见图5覆盖内容）</p><p>【正确答案】：abc</p><p>ADDDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>手工注入之MySQL手工布尔型注入实验</span></summary><div class="body"><p>【填空题】成功判断出数据库列名后，显示的第二条留言内容为1234（答案详细见图7覆盖内容）</p><p>【正确答案】：1234</p><p>【填空题】爆库得到admin用户的密码为c4da997（答案详细见图15覆盖内容）</p><p>【正确答案】：c4da997</p><p>DADDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>手工注入之MySQL手工时间型注入实验</span></summary><div class="body"><p>【填空题】访问的网页的类型是html（答案详细见图4覆盖内容）</p><p>【正确答案】：html</p><p>【填空题】时间型注入得到第一行的数据库的名称为dvwa（综合2.8-2.12操作得出或将ascii翻译成所表示的字符）</p><p>【正确答案】：dvwa</p><p>DADDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>手工注入之MySQL文件读取实验</span></summary><div class="body"><p>【填空题】读取到后台的密码的hash值最后5位值是da997（答案详细见图9覆盖内容）</p><p>【正确答案】：da997</p><p>DDDDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>手工注入之MySQL手工注入写一句话shell</span></summary><div class="body"><p>【填空题】爆出的网页目录的绝对路径为&#x2F;var&#x2F;www&#x2F;html&#x2F;zvuldrill（答案详细见图3覆盖内容,注意大小写区分）</p><p>【正确答案】：&#x2F;var&#x2F;www&#x2F;html&#x2F;zvuldrill</p><p>【填空题】利用union select..into outfile语句将查询到的内容及一句话木马写入文件,union查询到关于“1”字符的留言第二条的内容为1234（答案详细见图5覆盖内容）</p><p>【正确答案】：1234</p><p>【填空题】查看到search.php最后一句内容，把footer.php包含进现在的文件里来（答案详细见图12覆盖内容）</p><p>【正确答案】：footer.php</p><p>DADDC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>手工注入之MySQL手工字符型注入实验</span></summary><div class="body"><p>【填空题】成功判断出数据库列名后，显示的第二条留言内容为1234（答案详细见图7覆盖内容）</p><p>【正确答案】：1234</p><p>【填空题】爆库得到admin用户的密码最后5位为da997（答案详细见图13覆盖内容）</p><p>【正确答案】：da997</p><p>DADCC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>手工注入之MySQL手工宽字节注入实验</span></summary><div class="body"><p>??</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>手工注入之post手工注入实验</span></summary><div class="body"><p>DADAC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>手工注入之cookie手工注入实验</span></summary><div class="body"><p>【填空题】实验所用的 SQLMap 的版本号为：1.0（见图5覆盖处，请按标准填写）</p><p>【正确答案】：1.0</p><p>【填空题】利用 SQLMap 扫描得到的数据表信息中，被遮挡的数据表为：news（见图8覆盖处，请按标准填写）</p><p>【正确答案】：news</p><p>【填空题】利用 SQLMap 扫描得到的数据表信息中，被遮挡的数据表为：news（见图9覆盖处，请按标准填写）</p><p>【正确答案】：news</p><p>【填空题】利用 SQLMap 扫描得到的字段信息中，被遮挡的字段为：id（见图10覆盖处，请按标准填写）</p><p>【正确答案】：id</p><p>【填空题】利用 SQLMap 扫描得到的字段信息中，被遮挡的字段为：id（见图12覆盖处，请按标准填写）</p><p>【正确答案】：id</p><p>【填空题】利用 SQLMap 扫描得到的用户信息中，被遮挡的用户密码为：admin（见图12覆盖处，请按标准填写）</p><p>【正确答案】：admin</p><p>【填空题】利用 SQLMap 扫描得到的用户信息中，被遮挡的用户密码为：admin（见图14覆盖处，请按标准填写）</p><p>【正确答案】：admin</p><p>DBCAD BBCBA</p></div></details><h4 id="SQL注入深入"><a href="#SQL注入深入" class="headerlink" title="SQL注入深入"></a>SQL注入深入</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>sql注入--基于错误</span></summary><div class="body"><p>【填空题】一般判断是否存在基于错误的盲注和显错注入，可以输入【　　】，有报错信息，说明存在注入。（直接填写英文符号，填写中文名称不得分）<br>‘</p><p>【正确答案】：’</p><p>【填空题】从报错信息 ‘’1’’) 可以看出$id参数被【　　】包裹着。（答案见步骤4.1，按标准格式填写）<br>(‘’)</p><p>【正确答案】：(‘’)</p><p>ADAB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>宽字节注入</span></summary><div class="body"><p>【填空题】sqlmap的哪个参数可以读取服务端任意文件（请按标准格式填写，注意符号）–file-read</p><p>【正确答案】：–file-read</p><p>ADABB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>sql盲注--基于布尔</span></summary><div class="body"><p>【单选题】sqlmap注入方式technique，基于Boolean的盲注的参数是</p><p>A. Q</p><p>B. B</p><p>C. T</p><p>D. U</p><p>【正确答案】：B</p><p>ABBB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>sql盲注--基于报错</span></summary><div class="body"><p>【填空题】哪个数据库可以使用<code>exp(~(select * from(select database())as a ))</code>查询到数据库名（填写“mariadb”或“mysql”）<br>mysql</p><p>【正确答案】：mysql</p><p>【单选题】本次实验中，管理员密码使用的加密是：</p><p>A. AES</p><p>B. SHA1</p><p>C. MD5</p><p>D. ECC</p><p>【正确答案】：C</p><p>ADAB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>sql盲注--基于时间</span></summary><div class="body"><p>【填空题】sleep(5)表示延时5【　　】（填写时\分\秒\毫秒，不要填写英文字符）<br>秒</p><p>【正确答案】：秒</p><p>DBA</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>sql注入导入导出</span></summary><div class="body"><p>【单选题】网址<code>http://192.168.15.86/phpaa/search.php?keywords=1&#39; union select 1,2,3,4,5,6,7,8,0x3c3f70687020406576616c28245f504f53545b6872736166655d293b3f3e,9,10,12,13,14 into outfile &#39;/var/www/html/yjh.php&#39; -- &#39;</code>中，一句话木马是以多少进制的形式存在的</p><p>A. 2</p><p>B. 8</p><p>C. 10</p><p>D. 16</p><p>【正确答案】：D</p><p>BACBB DD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>增删改函数使用及注入防御方法</span></summary><div class="body"><p>【填空题】哪个函数指定了转义字符（答案见原理，按标准格式填写，只填写函数名即可）addslashes()</p><p>【正确答案】：addslashes()</p><p>BCACC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>http头部注入</span></summary><div class="body"><p>【单选题】sleep(5)的时间单位是</p><p>A. ms</p><p>B. s</p><p>C. m</p><p>D. h</p><p>【正确答案】：B</p><p>【填空题】burpsuit中的【】模块可以进行编解码（使用小写英文字符）decoder</p><p>【正确答案】：decoder</p><p>【填空题】sqlmap的哪个选项表示从文件读取数据（按标准格式填写）-r</p><p>【正确答案】：-r</p><p>DCDBB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>堆叠注入</span></summary><div class="body"><p>【填空题】若在步骤2.3，想查看数据库名称，可以把 version() 换为【　　】（使用小写英文字符）<br>database()</p><p>【正确答案】：database()</p><p>【填空题】sqlmap中的哪个选项可以导入文本文件的数据（使用英文符号和字母）<br>-r</p><p>【正确答案】：-r</p><p>BABC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>sqlmap工具使用</span></summary><div class="body"><p>【填空题】哪个选项可以指定字段（按标准格式填写，注意符号）<br>-c</p><p>【正确答案】：-c</p><p>AABCA</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>二次注入</span></summary><div class="body"><p>【单选题】当注册用户时存在用户名字符数限制时，可以使用的工具是？</p><p>A. Vega</p><p>B. BurpSuite</p><p>C. Nmap</p><p>D. SQLmap</p><p>【正确答案】：B</p><p>BACAC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>sqlmap深入</span></summary><div class="body"><p>【填空题】获取shell权限使用的sqlmap参数命令为（请使用标准格式填写）<br>–os-shell</p><p>【正确答案】：–os-shell</p><p>BABBC</p></div></details><h3 id="CSRF跨站请求伪造攻击"><a href="#CSRF跨站请求伪造攻击" class="headerlink" title="CSRF跨站请求伪造攻击"></a>CSRF跨站请求伪造攻击</h3><details class="tag-plugin colorful folding" child="codeblock"><summary><span>利用burp生成POC</span></summary><div class="body"><p>答案全是1….</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>CSRF实战cms</span></summary><div class="body"><p>答案还是1….</p></div></details><h3 id="Web密码破解攻击"><a href="#Web密码破解攻击" class="headerlink" title="Web密码破解攻击"></a>Web密码破解攻击</h3><details class="tag-plugin colorful folding" child="codeblock"><summary><span>登录表单密码破解攻击（Mutillidae）实验</span></summary><div class="body"><p>【填空题】使用Burp对登录信息进行拦截时，其中数据包格式中login-php-submit-button&#x3D;____（见图16覆盖处，请按标准填写）</p><p>【正确答案】：Login</p><p>DDCC</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>登录表单密码破解攻击（wzaspshop）实验</span></summary><div class="body"><p>【填空题】使用burp对登录信息进行拦截时，其中数据包格式中动作action&#x3D;____（见图11覆盖处，请按标准填写）</p><p>【正确答案】：login</p><p>【填空题】破解结果中， 可以看到密码为qwerasdf的状态返回长度Length是____（见图20覆盖处，请按标准填写）</p><p>【正确答案】：356</p><p>CDCD</p></div></details><h2 id="实验4"><a href="#实验4" class="headerlink" title="实验4"></a>实验4<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/%s.png"/></span></h2><h3 id="日志清除"><a href="#日志清除" class="headerlink" title="日志清除"></a>日志清除</h3><h4 id="Linux系统日志清除"><a href="#Linux系统日志清除" class="headerlink" title="Linux系统日志清除"></a>Linux系统日志清除</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>linux系统日志清除实验</span></summary><div class="body"><p>【填空题】在Linux系统中，使用lastlog命令可以查询每个用户最后一次登录的设备号和时间。（答案参考2.3）</p><p>【正确答案】：lastlog</p><p>【填空题】logtamper后面可以跟三种参数，它们分别是 -h、-m 和 -w</p><p>【正确答案】：-w</p><p>【填空题】logtamper后面跟-m参数可以修改用户最后一次登录日志</p><p>【正确答案】：-m</p><p>ABD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>linux系统清除日志</span></summary><div class="body"><p>DDD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Linux中清除痕迹和隐藏自己</span></summary><div class="body"><p>DDDBC</p></div></details><h4 id="Windows系统日志清除"><a href="#Windows系统日志清除" class="headerlink" title="Windows系统日志清除"></a>Windows系统日志清除</h4><details class="tag-plugin colorful folding" child="codeblock"><summary><span>WindowsXP系统日志清除实验</span></summary><div class="body"><p>【填空题】使用elsave -l security -C命令删除所有安全日志，并新添加了一条日志，它的分类是系统事件。（见图30遮盖处，注意事件为517）</p><p>【正确答案】：系统事件</p><p>ABCD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Windows 7系统日志清除实验</span></summary><div class="body"><p>【填空题】在事件查看器中，Windows日志中主要包含“应用程序”、“安全”、“Setup” 、系统以及“转发事件”。 （答案见图9覆盖处，请按标准填写）</p><p>【正确答案】：系统</p><p>【填空题】在Windows中，使用wevtutil.exe cl “Security”命令可以清除安全日志。（答案参考图11，请标准填写）</p><p>【正确答案】：Security</p><p>DCB</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Windows2003系统日志清除实验</span></summary><div class="body"><p>【填空题】在本实验中，清除Windows日志使用了del *.*命令。 （答案见图18处，请标准填写）</p><p>【正确答案】：del *.*</p><p>ACD</p></div></details><details class="tag-plugin colorful folding" child="codeblock"><summary><span>Windows2008系统日志清除实验</span></summary><div class="body"><p>【填空题】在Apache日志的语句中，带有“logCheck”进项暴力破解的路径，其请求方式为POST。（见图8覆盖处，请按标准填写）</p><p>【正确答案】：POST</p><p>CBA</p></div></details>]]></content>
    
    
    <summary type="html">&lt;p&gt;分享下答案&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Android studio</title>
    <link href="https://saevio.cn/2023/08/10/Android%20studio/"/>
    <id>https://saevio.cn/2023/08/10/Android%20studio/</id>
    <published>2023-08-09T16:00:00.000Z</published>
    <updated>2024-10-15T03:29:18.218Z</updated>
    
    <content type="html"><![CDATA[<p>Android开发</p><span id="more"></span><!-- more --><h3 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h3><meta name="referrer" content="no-referrer"><blockquote><p>由于某些不可抗力因素，Android studio插件市场下架了汉化包</p><p>于是用<a href="https://plugins.jetbrains.com/plugin/13710-chinese-simplified-language-pack----/versions">Intellij的汉化插件</a>替代</p></blockquote><p>打开Android studio<br><img src="http://tva1.sinaimg.cn/large/008e1sKigy1h6ca1t74orj30av048q3c.jpg" alt="image.png"><br><img src="http://tva1.sinaimg.cn/large/008e1sKigy1h6ca8xi1ayj30w50ntqdb.jpg" alt="image.png"></p><p><a href="https://api.dzzui.com/api/lanzoujx?url=https://mengchunm.lanzouw.com/iQGmz0bzol1i&type=down">汉化插件</a></p><blockquote><p>目前用下来213.370比较靠谱，最新版显示不兼容</p></blockquote><p><img src="http://tva1.sinaimg.cn/large/008e1sKily1h6cabrv9wnj30f80e841q.jpg" alt="image.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Android开发&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>指点天下及学习通签到</title>
    <link href="https://saevio.cn/2023/07/20/fakelocation/"/>
    <id>https://saevio.cn/2023/07/20/fakelocation/</id>
    <published>2023-07-19T16:00:00.000Z</published>
    <updated>2024-10-15T03:29:18.225Z</updated>
    
    <content type="html"><![CDATA[<p>到大三了，很多同学有考研和外出需求，因此写此签到教程</p><span id="more"></span><!-- more --><meta name="referrer" content="no-referrer"><h2 id="指点天下"><a href="#指点天下" class="headerlink" title="指点天下"></a>指点天下</h2><p>首先，打开手机的开发者模式</p><p>以小米手机为例</p><p>打开设置&#x2F;我的设备&#x2F;全部参数与信息，快速点击MIUI版本直至弹出“您已处于开发者模式“</p><img src="https://article.biliimg.com/bfs/article/a57657cb76f1b3ab6d27c75f351e157ac26ac6c3.jpg" alt="#" style="zoom:50%;" /><p>打开<a href="http://fakeloc.cc/app">http://fakeloc.cc/app</a> 下载并安装fakelocation</p><img src="https://article.biliimg.com/bfs/article/a7e9af6038c3af9a716a23baaa329925f4cbe2bf.jpg" alt="Screenshot_2023-03-22-20-45-32-161_com.lerist.fakelocation" style="zoom: 50%;" /><p>点击启动模拟，选择NOROOT模式</p><img src="https://article.biliimg.com/bfs/article/d060ea527b11867975a09f509891edc4c8b6d3e0.jpg" alt="Screenshot_2023-03-22-21-00-33-046_com.lerist.fakelocation" style="zoom:50%;" /><p>点击右上角加号，点击选择位置找到你想要模拟的位置，点击右下角✓</p><img src="https://article.biliimg.com/bfs/article/36d1a5937e1568b3d48ad72ce3b7f0fb7cc03d84.jpg" alt="new ducument" style="zoom:50%;" /><p>会弹出启用模拟位置的请求，点击”前往设置“，在开发者模式中找到”选择模拟位置信息应用“，选择”fakelocation“</p><img src="https://article.biliimg.com/bfs/article/77e5eeb4972347116f8cef8479fb6bd8a5557049.jpg" alt="QQ图片20230323161502" style="zoom:50%;" /><p>再次打开fakelocation,并点击启动模拟</p><img src="https://article.biliimg.com/bfs/article/b07b350c9ea7ef5f378f82f1b0a09f062bfdf769.jpg" alt="Screenshot_2023-03-22-21-18-39-024_com.lerist.fakelocation" style="zoom:50%;" /><p>这个嫌麻烦可以点取消（但以后每次都会弹出来）</p><img src="https://article.biliimg.com/bfs/article/a7c9dcf250ddce8b52291fe4e803296d99630b2c.jpg" alt="Screenshot_2023-03-22-21-21-42-818_com.axy.zhidian" style="zoom:50%;" /><p>打开指点天下签到，多次点击右下角定位，直至模拟成功</p><h2 id="学习通"><a href="#学习通" class="headerlink" title="学习通"></a>学习通</h2><p><font color='red'>希望大家能多在群里共享签到二维码或链接，互帮互助嘛</font></p><p>首先下载超星学习通签到-安卓端</p><p>github下载地址<a href="https://github.com/james-curtis/chaoxing-sign-app/releases">https://github.com/james-curtis/chaoxing-sign-app/releases</a></p><p>蓝奏云下载地址<a href="https://yunling.lanzout.com/b00pntoqd">https://yunling.lanzout.com/b00pntoqd</a> 密码:2uda</p><p>签到类型</p><ul><li><p><strong>普通签到&amp;手势签到&amp;签到码签到：</strong> 直接签到</p></li><li><p><strong>二维码签到（无视每十秒刷新）：</strong> </p><img src="https://article.biliimg.com/bfs/article/c0c553a97f027f439deebdfc16489d6d6f23813a.jpg" alt="new ducument" style="zoom: 33%;" /><ol><li><p>直接扫描二维码图片，确保清晰</p></li><li><p>扫描二维码获取以&#x3D;id为结尾的链接</p><blockquote><p><a href="https://passport2.chaoxing.com/mloginnewversion=true&refer=https://mobilelearn.chaoxing.com:80/widget/sign/e?id=7000061275973&c=7000061275973&enc=569051D34AFB5477C1FBBCCE87F43A40&DB_STRATEGY=PRIMARY_KEY&STRATEGY_PARA=id">https://passport2.chaoxing.com/mloginnewversion=true&amp;refer=https://mobilelearn.chaoxing.com:80/widget/sign/e?id=7000061275973&amp;c=7000061275973&amp;enc=569051D34AFB5477C1FBBCCE87F43A40&amp;DB_STRATEGY=PRIMARY_KEY&amp;STRATEGY_PARA=id</a> </p></blockquote><p>在软件签到界面输入该链接即可签到<font color='red'>（ 注意，很多软件扫码后会直接跳转导致链接不完整，请提前使用上方二维码测试确认一下）</font></p></li><li><p>或者输入链接中的enc参数：enc&#x3D;569051D34AFB5477C1FBBCCE87F43A40</p></li></ol></li><li><p><strong>位置签到：</strong> 直接在弹出的地图中选择签到地点即可</p></li><li><p><strong>拍照签到：</strong> 选择手机中的图片上传即可。也可以选择普通签到，此时不会上传图片，但是可以签到成功（教师端会有显示没有图片）</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;到大三了，很多同学有考研和外出需求，因此写此签到教程&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>java学习</title>
    <link href="https://saevio.cn/2023/06/10/java/"/>
    <id>https://saevio.cn/2023/06/10/java/</id>
    <published>2023-06-09T16:00:00.000Z</published>
    <updated>2024-10-15T03:16:53.793Z</updated>
    
    <content type="html"><![CDATA[<p>记录下java作业</p><span id="more"></span><!-- more --><h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h2><h3 id="5-19-数字金字塔"><a href="#5-19-数字金字塔" class="headerlink" title="5.19 数字金字塔"></a>5.19 数字金字塔</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter5;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Class2007210530</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span> line=<span class="number">8</span>;</span><br><span class="line">        <span class="type">int</span> temp=line;</span><br><span class="line">        <span class="keyword">for</span>(;line&gt;=<span class="number">1</span>;line--)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;line;i++)</span><br><span class="line">        System.out.print(<span class="string">&quot;    &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=(temp-line);i++)</span><br><span class="line">                System.out.printf(<span class="string">&quot;%4d&quot;</span>,(<span class="type">int</span>)Math.pow(<span class="number">2</span>, i));</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=(temp-line);i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">                System.out.printf(<span class="string">&quot;%4d&quot;</span>,(<span class="type">int</span>)Math.pow(<span class="number">2</span>, i-<span class="number">1</span>));</span><br><span class="line">        System.out.print(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;                                                  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2><h3 id="6-19-三角形面积"><a href="#6-19-三角形面积" class="headerlink" title="6.19 三角形面积"></a>6.19 三角形面积</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter6;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyTriangle2007210530</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    System.out.print(<span class="string">&quot;请输入三条边的值：&quot;</span>);</span><br><span class="line">    <span class="type">double</span> side1=input.nextDouble(),side2=input.nextDouble(),side3=input.nextDouble();</span><br><span class="line">    input.close();</span><br><span class="line">    <span class="keyword">if</span> (isValid(side1,side2,side3))&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;输入无效&quot;</span>);</span><br><span class="line">        System.exit(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;这三角形的面积为：&quot;</span>+area(side1, side2, side3));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(<span class="type">double</span> side1, <span class="type">double</span> side2, <span class="type">double</span> side3)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Math.abs(side1-side2)&gt;side3||Math.abs(side3-side2)&gt;side1||Math.abs(side3-side1)&gt;side2)</span><br><span class="line">    <span class="keyword">return</span>(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span>(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">area</span><span class="params">(<span class="type">double</span> side1,<span class="type">double</span> side2,<span class="type">double</span> side3)</span>&#123;</span><br><span class="line">    <span class="type">double</span> p=(side1+side2+side3)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> Math.pow(p*(p-side1)*(p-side2)*(p-side3),<span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第九章"><a href="#第九章" class="headerlink" title="第九章"></a>第九章</h2><h3 id="9-7-创建一个account类"><a href="#9-7-创建一个account类" class="headerlink" title="9.7 创建一个account类"></a>9.7 创建一个account类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Account2007210530</span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> id=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="type">double</span> balance=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="type">double</span> annualInterestRate=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">private</span> Date dateCreated;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Account2007210530</span><span class="params">()</span>&#123;</span><br><span class="line">dateCreated =<span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Account2007210530</span><span class="params">(<span class="type">int</span> id,<span class="type">double</span> balance)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id=id;</span><br><span class="line"><span class="built_in">this</span>.balance=balance;</span><br><span class="line">dateCreated = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getBalance</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> balance;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBalance</span><span class="params">(<span class="type">double</span> balance)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.balance = balance;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getAnnualInterestRate</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> annualInterestRate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAnnualInterestRate</span><span class="params">(<span class="type">double</span> annualInterestRate)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.annualInterestRate = annualInterestRate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> Date <span class="title function_">getDateCreated</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> dateCreated;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getMonthlyInterestRate</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> annualInterestRate/<span class="number">100</span>/<span class="number">12</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getMonthlyInterest</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> balance*annualInterestRate/<span class="number">100</span>/<span class="number">12</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">withDraw</span><span class="params">(<span class="type">double</span> money)</span> &#123;</span><br><span class="line">balance-=money;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deposit</span><span class="params">(<span class="type">double</span> money)</span> &#123;</span><br><span class="line">balance+=money;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">Account2007210530</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Account2007210530</span>(<span class="number">1122</span>, <span class="number">20000</span>);</span><br><span class="line">account.setAnnualInterestRate(<span class="number">4.5</span>);</span><br><span class="line">account.withDraw(<span class="number">2500</span>);</span><br><span class="line">account.deposit(<span class="number">3000</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;余额: &quot;</span>+account.getBalance()+<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;月利息: &quot;</span>+account.getMonthlyInterest()+<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;开户日期: &quot;</span>+account.getDateCreated());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第十一章"><a href="#第十一章" class="headerlink" title="第十一章"></a>第十一章</h2><h3 id="11-2-Person类"><a href="#11-2-Person类" class="headerlink" title="11.2 Person类"></a>11.2 Person类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter11;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> String phoneNumber;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    Person(String name,String address,String phoneNumber,String email)&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.address = address;</span><br><span class="line">        <span class="built_in">this</span>.phoneNumber = phoneNumber;</span><br><span class="line">        <span class="built_in">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getThisName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;Person &quot;</span> + <span class="built_in">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String grade;</span><br><span class="line">    Student(String name,String address,String phoneNumber,String email,String grade)&#123;</span><br><span class="line">        <span class="built_in">super</span>(name,address,phoneNumber,email);</span><br><span class="line">        <span class="built_in">this</span>.grade = grade;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;Student &quot;</span> + <span class="built_in">this</span>.getThisName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String office;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> salary;</span><br><span class="line">    <span class="keyword">private</span> Date acceptDate;</span><br><span class="line"></span><br><span class="line">    Employee(String name,String address,String phoneNumber,String email,String office,<span class="type">double</span> salary,Date acceptDate)&#123;</span><br><span class="line">        <span class="built_in">super</span>(name,address,phoneNumber,email);</span><br><span class="line">        <span class="built_in">this</span>.office = office;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">        <span class="built_in">this</span>.acceptDate = acceptDate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;Employee &quot;</span> + <span class="built_in">this</span>.getThisName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Faculty</span> <span class="keyword">extends</span> <span class="title class_">Employee</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Date workDate;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> level;</span><br><span class="line">    Faculty(String name,String address,String phoneNumber,String email,String office,<span class="type">double</span> salary,Date acceptDate,Date workDate,<span class="type">int</span> level)&#123;</span><br><span class="line">        <span class="built_in">super</span>(name,address,phoneNumber,email,office,salary,acceptDate);</span><br><span class="line">        <span class="built_in">this</span>.level = level;</span><br><span class="line">        <span class="built_in">this</span>.workDate = workDate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;Faculty &quot;</span> + <span class="built_in">this</span>.getThisName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Staff</span> <span class="keyword">extends</span> <span class="title class_">Employee</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    Staff(String name,String address,String phoneNumber,String email,String office,<span class="type">double</span> salary,Date acceptDate,String title)&#123;</span><br><span class="line">        <span class="built_in">super</span>(name,address,phoneNumber,email,office,salary,acceptDate);</span><br><span class="line">        <span class="built_in">this</span>.title = title;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;Staff &quot;</span> + <span class="built_in">this</span>.getThisName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Account2007210530</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;人名&quot;</span>,<span class="string">&quot;地址&quot;</span>,<span class="string">&quot;电话&quot;</span>,<span class="string">&quot;邮箱&quot;</span>);</span><br><span class="line">        System.out.println(person.toString());</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;学生人名&quot;</span>,<span class="string">&quot;学生地址&quot;</span>,<span class="string">&quot;学生电话&quot;</span>,<span class="string">&quot;学生邮箱&quot;</span>,<span class="string">&quot;班级状态&quot;</span>);</span><br><span class="line">        System.out.println(student.toString());</span><br><span class="line">        <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="string">&quot;雇员人名&quot;</span>,<span class="string">&quot;雇员地址&quot;</span>,<span class="string">&quot;雇员电话&quot;</span>,<span class="string">&quot;雇员邮箱&quot;</span>,<span class="string">&quot;雇员办公室&quot;</span>,<span class="number">1</span>,<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        System.out.println(employee.toString());</span><br><span class="line">        <span class="type">Faculty</span> <span class="variable">faculty</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Faculty</span>(<span class="string">&quot;教员人名&quot;</span>,<span class="string">&quot;教员地址&quot;</span>,<span class="string">&quot;教员电话&quot;</span>,<span class="string">&quot;教员邮箱&quot;</span>,<span class="string">&quot;教员办公室&quot;</span>,<span class="number">1</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),<span class="keyword">new</span> <span class="title class_">Date</span>(),<span class="number">1</span>);</span><br><span class="line">        System.out.println(faculty.toString());</span><br><span class="line">        <span class="type">Staff</span> <span class="variable">staff</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Staff</span>(<span class="string">&quot;职员人名&quot;</span>,<span class="string">&quot;职员地址杏园&quot;</span>,<span class="string">&quot;职员电话&quot;</span>,<span class="string">&quot;职员邮箱&quot;</span>,<span class="string">&quot;职员办公室&quot;</span>,<span class="number">1</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),<span class="string">&quot;头衔&quot;</span>);</span><br><span class="line">        System.out.println(staff.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录下java作业&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>常用工具合集</title>
    <link href="https://saevio.cn/2023/02/03/software/"/>
    <id>https://saevio.cn/2023/02/03/software/</id>
    <published>2023-02-02T16:00:00.000Z</published>
    <updated>2024-10-15T03:29:18.216Z</updated>
    
    <content type="html"><![CDATA[<p>整合一下平时常用的软件，工具什么的</p><span id="more"></span><h3 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h3><p><a href="https://github.com/xlzy520/typora-plugin-bilibili">哔哩哔哩&amp;Typora图床</a>(注意不要把main.exe放在Program Files文件夹下,使用常用账号的SESSDATA)</p><div class="tag-plugin copy"><input class="copy-area" id="copy_4" value="https://images.weserv.nl/?url="><button class="copy-btn" onclick="util.copy(&quot;copy_4&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p><a href="https://github.com/xlzy520/bilibili-img-uploader">哔哩哔哩&amp;Chrome图床</a></p><p><a href="https://github.com/suxiaogang/WeiboPicBed">微博&amp;Chrome图床</a></p><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><p>蓝奏云下载直链API：</p><p><a href="https://api.dzzui.com/api/lanzoujx?url=%E8%93%9D%E5%A5%8F%E4%BA%91%E9%93%BE%E6%8E%A5&type=down">https://api.dzzui.com/api/lanzoujx?url=蓝奏云链接&amp;type=down</a></p><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><h4 id="Bandzip"><a href="#Bandzip" class="headerlink" title="Bandzip"></a>Bandzip</h4><h4 id="很好用的解压工具，可惜有广告了"><a href="#很好用的解压工具，可惜有广告了" class="headerlink" title="很好用的解压工具，可惜有广告了"></a>很好用的解压工具，可惜有广告了</h4><p><a href="https://api.dzzui.com/api/lanzoujx?url=https://mengchunm.lanzouw.com/iOzd205iiv1e&type=down">破解版下载</a></p><h4 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h4><p>好用的文本编辑器，收费了</p><p><a href="https://typora.io/windows/dev_release.html">免费老版本下载</a></p><h4 id="SpaceSniffer"><a href="#SpaceSniffer" class="headerlink" title="SpaceSniffer"></a>SpaceSniffer</h4><p>磁盘空间可视化分析工具</p><p><a href="https://api.dzzui.com/api/lanzoujx?url=https://mengchunm.lanzouw.com/iyqdq05im01c&type=down">下载</a></p><h4 id="RX-8-Audio-Editor"><a href="#RX-8-Audio-Editor" class="headerlink" title="RX 8 Audio Editor"></a>RX 8 Audio Editor</h4><p>去除音频杂音的软件（存云盘里了，太大了）</p><h4 id="Xpatch"><a href="#Xpatch" class="headerlink" title="Xpatch"></a>Xpatch</h4><p>很适合不刷机的安卓用户，原理类似把magisk模块植入安装包，有空玩玩</p><p><a href="https://github.com/WindySha/Xpatch">https://github.com/WindySha/Xpatch</a></p><h4 id="DiskGenius磁盘分区工具"><a href="#DiskGenius磁盘分区工具" class="headerlink" title="DiskGenius磁盘分区工具"></a>DiskGenius磁盘分区工具</h4><p><a href="https://download.geniusite.com/DG5431342_x64.zip">下载</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;整合一下平时常用的软件，工具什么的&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>刷机资源整合</title>
    <link href="https://saevio.cn/2023/01/25/Brush/"/>
    <id>https://saevio.cn/2023/01/25/Brush/</id>
    <published>2023-01-24T16:00:00.000Z</published>
    <updated>2024-10-15T03:29:18.208Z</updated>
    
    <content type="html"><![CDATA[<p>由于近来刷机方式越来越复杂，刷机所需要的资源也越来越多  </p><p>找起来比较麻烦，干脆写个整合</p><span id="more"></span><!-- more --><h2 id="Android-调试桥-adb"><a href="#Android-调试桥-adb" class="headerlink" title="Android 调试桥 (adb)"></a>Android 调试桥 (adb)</h2><p>如果您是 Android 开发者，则应从 Android Studio 的 <a href="https://developer.android.google.cn/studio/intro/update?hl=zh-cn#sdk-manager">SDK 管理器</a>或通过 <a href="https://developer.android.google.cn/studio/command-line/sdkmanager?hl=zh-cn"><code>sdkmanager</code></a> 命令行工具获取最新的 SDK Platform-Tools。这样可确保这些工具能够与其他 Android SDK 工具一起保存到正确的位置，并可轻松地进行更新。</p><p>但是，如果您只想使用这些命令行工具，请访问以下链接：</p><ul><li><a href="https://dl.google.com/android/repository/platform-tools_r33.0.1-windows.zip?hl=zh-cn">下载适用于 Windows 的 SDK Platform-Tools</a></li><li><a href="https://dl.google.com/android/repository/platform-tools_r33.0.1-darwin.zip?hl=zh-cn">下载适用于 Mac 的 SDK Platform-Tools</a></li><li><a href="https://dl.google.com/android/repository/platform-tools_r33.0.1-linux.zip?hl=zh-cn">下载适用于 Linux 的 SDK Platform-Tools</a></li></ul><h2 id="Magisk"><a href="#Magisk" class="headerlink" title="Magisk"></a>Magisk</h2><p><a href="https://github.com/topjohnwu/Magisk/releases">magisk</a>下载并安装</p><h4 id="获取BOOT-img文件"><a href="#获取BOOT-img文件" class="headerlink" title="获取BOOT.img文件"></a>获取BOOT.img文件</h4><p>下载ROM（刷机包）文件</p><p>小米:<a href="https://xiaomirom.com/">https://xiaomirom.com</a></p><p>一加:<a href="https://www.oneplus.com/cn/support/softwareupgrade">https://www.oneplus.com/cn/support/softwareupgrade</a></p><h5 id="线刷包"><a href="#线刷包" class="headerlink" title="线刷包"></a>线刷包</h5><p>通过解压，在解压文件里找</p><h5 id="卡刷包"><a href="#卡刷包" class="headerlink" title="卡刷包"></a>卡刷包</h5><p>同样解压后,通过<a href="https://github.com/ssut/payload-dumper-go/releases">payload dumper</a>工具解包</p><p>将payload.bin文件解压出来，和payload_dumper.exe,ROM(刷机包)放在一个文件夹下，双击payload_dumper.exe解包</p><h4 id="处理BOOT-img文件"><a href="#处理BOOT-img文件" class="headerlink" title="处理BOOT.img文件"></a>处理BOOT.img文件</h4><ol><li>打开magisk软件，选择magisk旁的安装</li><li>选择并修补一个文件</li><li>选择BOOT.img</li><li>将magisk生成的magisk_patched.img文件上传至电脑</li><li>在adb文件夹内，点击上方文件路径输入并打开cmd运行</li></ol><div class="tag-plugin copy"><input class="copy-area" id="copy_1" value="fastboot flash boot D:\magisk_patched.img（该文件所在地址）"><button class="copy-btn" onclick="util.copy(&quot;copy_1&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>恭喜你已经成功给你的手机输入了magisk框架</p><p>但刷入了错误或不适配的文件可能会导致你的手机无法正常开机&#x2F;成砖</p><p>所以我建议你刷入第三方rec并安装mm管理器(Magisk Manager for Recovery Mode)模块</p><h3 id="第三方Rec"><a href="#第三方Rec" class="headerlink" title="第三方Rec"></a>第三方Rec</h3><p>  进入Rec</p><table><thead><tr><th align="center"></th><th align="center">电源键</th><th align="center">音量-</th><th align="center">音量+</th><th align="center">其他</th></tr></thead><tbody><tr><td align="center">小米</td><td align="center">●</td><td align="center"></td><td align="center">●</td><td align="center"></td></tr><tr><td align="center">oppo</td><td align="center">●</td><td align="center">●</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">一加</td><td align="center">●</td><td align="center">●</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">索尼</td><td align="center">●</td><td align="center"></td><td align="center">●</td><td align="center"></td></tr><tr><td align="center">三星</td><td align="center">●</td><td align="center"></td><td align="center">●</td><td align="center">bixby键</td></tr></tbody></table><p>  <a href="https://twrp.me/Devices/">TWRP(Team Win Recovery Project)</a></p><div class="tag-plugin copy"><input class="copy-area" id="copy_2" value="fastboot flash recovery D:\TWRP.img（该文件所在地址）"><button class="copy-btn" onclick="util.copy(&quot;copy_2&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><h3 id="mm管理器"><a href="#mm管理器" class="headerlink" title="mm管理器"></a><a href="https://www.droidmirror.com/download/mm-201904040-zip">mm管理器</a></h3><p>在mm管理器中下载并刷入</p><p>使用方法：在REC主界面选择 高级——&gt;终端命令——&gt;在终端中输入 sh &#x2F;sdcard&#x2F;mm或&#x2F;data&#x2F;media&#x2F;mm 即可进入</p><p>建议使用mm管理器中文版<a href="https://www.lanzoui.com/b00ncqwod">https://www.lanzoui.com/b00ncqwod</a>密码：yezi</p><h3 id="其他工具"><a href="#其他工具" class="headerlink" title="其他工具"></a>其他工具</h3><p><a href="https://lsdy.top/gjzs">搞机助手</a></p><p><a href="http://119.3.10.7/">残芯定制rec</a>(要付费，但功能全一点点， 安卓11以下rec自动解锁，安卓十二以上无锁屏密码自动解锁)</p><h3 id="成砖修复"><a href="#成砖修复" class="headerlink" title="成砖修复"></a>成砖修复</h3><p>小米可以试试<a href="https://miuiver.com/miflash/">miflash</a>(配合<a href="https://xiaomirom.com/">https://xiaomirom.com</a>)</p><p>可以试试保留数据刷机，不行再全部删除刷机</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;由于近来刷机方式越来越复杂，刷机所需要的资源也越来越多  &lt;/p&gt;
&lt;p&gt;找起来比较麻烦，干脆写个整合&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>蒲公英女孩（The Dandelion Girl）</title>
    <link href="https://saevio.cn/2022/09/20/%E8%92%B2%E5%85%AC%E8%8B%B1%E5%A5%B3%E5%AD%A9/"/>
    <id>https://saevio.cn/2022/09/20/%E8%92%B2%E5%85%AC%E8%8B%B1%E5%A5%B3%E5%AD%A9/</id>
    <published>2022-09-19T16:00:00.000Z</published>
    <updated>2024-10-15T03:15:49.481Z</updated>
    
    <content type="html"><![CDATA[<p>作者：羅伯特‧F‧楊</p><span id="more"></span><!-- more --><h1 id="蒲公英女孩"><a href="#蒲公英女孩" class="headerlink" title="蒲公英女孩"></a>蒲公英女孩</h1><p>作品名：蒲公英女孩（The Dandelion Girl）</p><p>作者：羅伯特‧F‧楊</p><p>山头的女孩让马克想到了埃德娜·圣文森特·米莱。这也许是因为她那在夕阳前任由蒲公英花色的头发随风舞动的身姿；也许是因为她那旧式连衣裙裙摆缠绕着她修长双腿的模样。不论怎样，他都清楚地感觉到，她似乎是从过去穿越到现在的。这事儿说来也怪，因为不久后他便知道，她所来之处并非过去，而是将来。<br>他在她背后不远处停了下来，爬山让他气喘不已。她还没有察觉到他，而他也在考虑怎样让她发现自己却又不吓着她。他一边要下定决心，一边拿出烟斗、填入烟丝点了火，然后弓起手挡在烟斗口前，吸了几口气，直到烟丝微微地发出光来。当他再度望向她时，她已经转过身来，好奇地看着他了。<br>他慢慢地走了过去，一面强烈地感觉到天空的迫近，一面享受着清风掠过面庞。他默想，自己真该多出来走走。来这座小山丘的路上，他已经徒步穿过了一片树林。而现在，那片树林已经在他脚下很远了。它们像是在秋天的第一场暗火中静静燃烧着。更远处，则是一座小湖，湖边建有一座小木屋和一处钓台。由于妻子意外地被招入陪审团，他只得独自度过从暑假挤出来的两周时间：白天在钓台钓鱼，晚上则在起居室的大壁炉前读书度过寒夜。按这套程序做了两天后，他开始走出小屋，在树林里漫无目的地游荡，最终来到这座小山丘，爬上去后遇见了这个女孩。<br>他已走近了她，看到了她湛蓝的双眸——就像那映衬出她纤瘦的身影的天空一样蓝。她的鹅蛋脸年轻、柔和、而又甜美，让他心生悸动、感到似曾相识。他压抑住想要抚摩她那清风吹拂的面庞的冲动：尽管没有伸出手去，但他仍觉得指尖有隐隐的刺痛。<br>他心里一阵恐慌：怎么搞得，我都已经四十四了，而她基本上还没有二十岁。我这是着了什么魔了？他大声地问了句：“你喜欢这风景吗？”<br>“哦，是的。”她转回身去，用手划了一个夸张的半圈，“简直叫人不可思议！”<br>他顺着她的视线看过去，说道：“嗯，确实。”树林在他们的脚下继续向外延伸，以一片九月的温暖的秋色，覆盖了整块低地，怀抱着几英里外的一个小村庄，最终止于这城郊边缘的第一片村落前。更远处，雾霭中柔和地显现出科沃城的轮廓，看上去就像绵延不断的中世纪城堡一般，如梦如幻。他问道：“你也是从那城里来的吗？”<br>“也可以这么说吧。”她冲他笑着说，“我是从两百四十年后的科沃城来的。”<br>这一展笑容告诉他，她并不真的期望他会相信，但似乎又在希望他能够假装如此。他也笑着回应道：“那也就是2201年了，对吧？我猜那个时候这里肯定变得非常大了。”<br>“嗯，没错。这儿变成了大城市的一部分，一直延伸到那里。”她指着他们脚下森林的边缘，“2040大街笔直地穿过那片糖槭林。然后，你看到那边的洋槐了没？”<br>“嗯，看到了。”<br>“那里是新广场的所在地。那里有一个超大的超市，逛一遍要花上半天的时间。你在那里基本上可以买到从阿司匹林到飞行车的任何东西。超市旁边，也就是那片山毛榉那里，是一个大型的服装店，里面全是一流女装设计师的最新设计。我这身衣服就是今天早上刚在那买的，是不是很好看？”<br>要说是的话，也是因为穿着它的人是她。不过呢，他还是视之以礼。它是用一种陌生的布料裁制的，这布料就像是棉花糖、海沫和雪花的混合物。对于手持神丝的织布师来说，制出这种材料就是信手拈来——显然，年轻女孩的奇思幻想也同样如此。“我觉得你是坐时光机器来的。”<br>“嗯，我爸爸做了一台。”<br>他凑近去看了看她。他从未见过这样一副坦诚的面容。“那你经常来这吗？”<br>“啊，是的。这里是我最喜欢的时空坐标。有时我在这里一待就是几小时，只是一直在看、看、看。前天，我看到了一只兔子；昨天，是一只鹿；而今天，则是你。”<br>“但你怎么会到昨天呢？你不是一直是返回同一个时间点的吗？”<br>“哦，我明白你的意思。这是因为时光机器和世间万物一样，会受到时间流逝的影响。如果你想精确保证相同的坐标，就得每二十四个小时把它回调一次。我从来都不调，因为我更喜欢每次过来都是不同的一天。”<br>“你父亲有陪你来过吗？”<br>一群呈V字形排列的天鹅，慵懒地从他们头顶飞过。她盯着它们看了会儿才终于开口说道：“我爸爸现在卧床不起。要是可以的话，他一定非常想来。”然后她赶忙加上一句：“不过我会把我看到的东西全部都告诉他，这样应该就能像他真地来过一样了，是吧？”<br>她殷切地看着他，让他心头涌起一阵渴望。“一定是这样的，”他顿了顿，继续说道，“拥有一台时光机器一定很棒。”<br>她严肃地点了点头。“对那些喜欢站在晴空碧草下的人来说，它们是一份恩惠。在二十三世纪，这样的地方已经不多了。”<br>他笑了笑：“在二十世纪就不是很多了。我猜你一定会说这里是一片世外桃源，我以后会多来看看的。”<br>“你住在这附近吗？”<br>“我就在身后大约三英里外的一座小木屋里。我本来是来度假的，但我妻子被叫去陪审团了，没法跟我一起来。假期也没法延期，所以我只能迫不得已地当一回梭罗了。我叫马克·兰道夫。”<br>“我叫朱莉，朱莉·丹佛斯。”<br>这名字和她很相配，就像这身白色的连衣裙、这一片蓝天、这一小山丘以及这一袭秋风一样和她相配。也许她住在林里的小村庄里，但这都无关紧要了。如果她想假装自己是从未来来的，他也没什么异议。真正重要的是，他在第一眼见到她时的那种感觉，以及每次看到她平静的面容时那令他动心的柔情。“朱莉，你是做什么工作的？还是说你还在上学？”<br>“我正在为成为一名秘书而学习。”她退了半步，优美地踮脚转了一圈，双手紧握胸前，然后继续说道，“我就喜欢当秘书。在一个又大又重要的办公室里工作，记录重要人士说的话，这一定非常棒。兰道夫先生，你希望我成为你的秘书吗？”<br>“非常愿意。我妻子也曾是我的秘书，那都是战前的事了。我们也是这样偶遇的。”嗳，为什么自己要说这些呢？他有点惊讶。<br>“那她是个好秘书吗？”<br>“她是最好的。不过很可惜，我失去了她。不过呢，我失去了一位好秘书，却得到了一个好妻子。所以我觉得这也不算是损失吧。”<br>“嗯，我也觉得不是。对了，兰道夫先生，我现在必须回去了。爸爸一定在等着听我今天的所见所闻，我还要准备他的晚餐。”<br>“那你明天还会来这儿吗？”<br>“应该吧，我每天都来的。那就再见啦，兰道夫先生。”<br>“再见，朱莉。”<br>他目送她轻快地跑下山，消失在那片糖槭林里。那是二百四十年后的2040大街。他笑了笑，心想，多么有魅力的孩子啊。这种难以压抑的好奇心、以及对生活的热情，一定让人兴奋不已。他现在更能完全地领会这两种特质，因为他曾经放弃过它们。二十岁时，他是一个不苟言笑的青年，在法学院的路上披荆斩棘；二十四岁有了自己的公司，虽然不大，但仍让他全身心投入其中——好吧，也不是全部。娶了安妮后，他有了一段短暂的休息。在此期间，养家糊口已不再是当务之急。再之后，战争接踵而至，他们有了另一段休息时间——这一次要长多了——这时，安分养家已经有些遥远，有时还会被当成可鄙的追求。回到市井生活后，生计问题又如复仇般汹汹来袭，这是因为他现在还要养活老婆孩子。除了最近允许自己每年过四周假期外，他比以往更加地投入了到工作中去。这四周的时间，两周与安妮和杰夫一同在事先决定的旅游胜地度过，另两周则在杰夫返校后，和安妮到他们在湖边的小木屋度过。不过，今年他的这两周是独自度过的。好吧，也许不算全是一人。<br>烟斗已经熄灭多时，他都浑然不觉。然后他再度把它点燃，迎着风深吸一口，便往山下走去，然后穿过树林，回到小木屋。秋分已过，白昼在满满变短。今天的白天也即将过去，入夜的湿气已经弥漫在了朦胧的空气中。<br>他走得很慢，到湖边时太阳已经落山。这个湖很小，却很深，树木一直生长到湖畔。小木屋在距湖边有点远的地方，旁边列着一排松树。一条蜿蜒的小道将它和钓台相连。在它背后有条石子路，连着一条泥路，后者又通向公路。他的旅行车停放在后门外，但凡一念之需就可以将他带回城市生活。<br>他准备的晚餐很简单。在厨房就地吃完后，他来到起居室，开始读书。杂货间发动机的嗡嗡声时起时落，但夜晚在这些现代人耳中稀松平常的声音下还是静谧无瑕。他从壁炉旁摆得满满当当的书架上取下一本美国诗集，然后坐下来直接翻到《山丘午后》这一首。他把这首珍爱的诗读了三遍，每遍都会看到她映照在夕阳下的身姿：秀发迎风舞动，裙摆飘雪般环绕在修长可人的双腿边。他感到喉头发堵，无法下咽。<br>他把书放回书架、走出去、站在了门廊上。然后他给烟斗添上烟丝，点了烟。他强迫自己去想安妮。随即，安妮的脸便显现在眼前——坚定而不失柔和的下巴，暖人心怀、富于同情、却又隐隐地带有一丝让他说不清道不明的恐惧的双眸，依旧柔嫩的脸颊，温文尔雅的微笑——它们在她曾经那夺目的亮棕色头发和她高挑、柔美的优雅身材下显得更加动人。和往常一样，在想到她时，他总要感叹她那永葆的容颜，感叹她是怎么在这些年来一直都和当年那个早晨、那个让他一抬眼便惊为天人、羞涩地站在他办公桌前的那个她一样可爱。然而不可思议的是，仅仅二十年后，他就热切地盼望着和一个都可以做他女儿的、超乎想象的女孩约会。好吧，他还不至如此。他就是一下子产生了动摇，仅此而已。一时间情绪的平静抛弃了他，于是他困惑了。现在他的双脚回到了自己的控制下，世界也回到了清醒和理智的轨道。<br>他塞住烟斗口回到屋内。进了卧室，他便褪去衣裤、钻进被褥、关灯睡觉了。本该翩然而至的睡意这次却迟迟不来。而它终于姗姗来迟之后，却化作了一个个支离破碎、纠结不堪的梦境。<br>“前天，我看到了一只兔子；”她如是说道，“昨天，是一只鹿；而今天，则是你。”<br>第二天下午她穿的是蓝色的连衣裙，蒲公英花色的头发上还绑上了一根小巧的蓝色缎带与之相衬。快到了山顶了，他停下来站了会儿，没有动，等待着喉头的紧张感退去。然后，他才走上前去和她并肩伫立风中。但她前颈和下颌的柔美曲线又将紧张感带了回来。“你好，我还以为你不来了呢。”她转过身来跟他打招呼，但过了一会儿他才缓过来。<br>他终于说道：“但我来了，你不也是吗？”<br>“嗯，我真高兴。”<br>附近有片裸露的花岗岩，勉勉强强可以当作一条石板凳。他们坐在上面，远眺山下的平原。他添满烟斗，点着了，然后对着风吐了一口烟。“我爸爸也抽烟斗。他点烟的时候，拱手遮风的姿势和你一样，就算没有风也是这样的。你和他在很多地方都很像。”<br>“跟我说说你父亲吧，也说说你自己。”<br>于是她开始了述说。她现在二十一岁，父亲是一名退休的物理学家，曾经受雇于政府。他们住在2040大街的一个小公寓里。四年前母亲去世后，她就开始了操持家事。之后他也告诉了她有关他自己、安妮和杰夫的事——他谈到自己打算有朝一日让杰夫跟他共事；谈到安妮对照相的恐惧，说她在结婚那天就拒绝照相，并从此之后就一直如此；又谈到一家三口去年夏天宿营旅行的快乐时光。<br>他话音刚落，她便说道：“你们的家庭生活真好呀。1961年一定是最适合生活的一年！”<br>“你有台自由使用的时光机器，可以想来就来呀。”<br>“这可没那么容易。且不说我做梦也不可能抛开我爸爸不管这一点，我还得多多留意时间警察。要知道，时间旅行只限定于那些政府扶持的历史考察队成员，它对普通老百姓是禁止的。”<br>“你好像一直没什么事呀。”<br>“那是因为我爸爸自己造了一台机器，时间警察都不知道这件事。”<br>“但你还是违法了呀。”<br>她点了点头：“但这只在他们眼里、对他们的时间观念而言是这样的。我爸爸有他自己的看法。”<br>听她说话让人心旷神怡，而她说的内容都无关紧要了。他希望她一直说下去，主题有多让人难以置信都无所谓。“跟我讲讲吧。”<br>“我先跟你说说官方的理念。支持这一说法的人认为，任何人都不应该物质性地参与任何过去发生的事情，因为他的出现会造成一个矛盾，而未来事件则不得不发生变化，以消除矛盾。因此，时间运送局要确保只有官方人士才能使用它的时光机器。他们还维持了一定的警力，拘捕那些时代穿越者：这些人或是渴望过上简单生活，或是伪装成历史学者想永远回到一个不一样的时代。<br>“但按照我爸爸的观点，时间之书是早就写好了的。他认为，从宏观的角度看，所有要发生的事情都已经发生过了。因此，如果一个未来人参与了过去的事件，那么他便成为那个事件的一部分——理由很简单，那就是他事先就是那件事的一部分，这样矛盾就无从出现了。”<br>马克深吸了一口烟，他需要这样平复心境。“你父亲听上去真是个了不起的人呐。”<br>“哦，没错！”兴奋增添了她脸上的红晕，也让那双湛蓝的眼眸熠熠生光。“你一定不会相信他读过多少书！兰道夫先生，你知道吗，我家满满地都是书！有黑格尔、康德和休谟；还有爱因斯坦、牛顿和魏茨泽克。我、我自己也读过一些。”<br>“我也收藏了很多书。其实，我也读过一些。”<br>她欣喜地看着他的脸：“多好啊，兰道夫先生。我打赌我们有很多共同爱好！”<br>接下来的对话证明他们确实如此——虽然他很快反应到，尽管男方四十四岁而女方二十一岁，但二人在九月的山头讨论先验感性论、贝克莱主义和相对论还是有点煞风景。不过让他高兴的是，这样也并不是毫无收获——他们就先验感性论的热烈讨论不只得到些演绎和归纳的结论，还让她的眼中点缀出点点繁星；关于贝克莱的分歧不止显现出这位主教的理论的弱点，也让她的双颊上泛起了阵阵腮红；而对相对论的讨论也不仅仅说明了能量总是等于质量乘以真空中光速的平方，还说明了知识对于女性魅力而言远非阻碍，而是一种财富。<br>当时的心情超出其本该存留的时间，久久地徘徊不去，直到他躺在床上时还萦绕心头。这次他都没有试着去想安妮，他知道这样也无济于事。取而代之的，是躺在黑暗中任凭思绪自由呈现——结果它们都汇聚在了一座秋意盎然的山头，以及一位有着一头蒲公英花色般头发的女孩身上。<br>前天，我看到了一只兔子；昨天，是一只鹿；而今天，则是你。<br>次日上午，他驾车前往林里的小村庄，去邮局查看有没有自己的信件。什么都没有，这点他并不惊讶。杰夫和他一样不喜欢写信。而安妮，这会儿恐怕还不能与外界联系。至于公司那边，他已经交代过秘书，除了最紧急的事情，其它事都不要打扰他。<br>他琢磨着要不要找那个满脸皱纹的老局长问问这片区域有没有一户姓丹佛斯的人家。他还是决定不问，因为这么做就打破了朱莉精心构建的虚构设定。虽然他并不相信这个设定的有理性，但他心里也找不到推翻它的理由。<br>这天下午她穿了一件黄色的连衣裙，深浅和她的发色一样。他一看到她就再次喉头发紧，说不出话来。但只要开头几分钟一过，把话说出来后，就一切顺利了。随后，他们的思想就像两条生机勃勃的溪流，欢快地流淌在午后时光的河谷里。这次分别时首先发问的是她：“你明天还会来吗？”——虽然这只是因为她比他抢先把话说了出来。这几个字一路上像歌唱般地在他耳中回响，陪着他穿过树林、回到小屋，并在他在门廊抽了一晚上的烟后伴他睡去。<br>当他次日下午登上山顶时，那里空无一人。最开始，失望让他有点恍惚，但随后他就想，她只是迟到了，仅此而已。她随时都可能出现。他坐在花岗岩石凳上等待着，但她没有来。时间一分一分地过去了——已经几个小时了。影子漫过树林，爬到了半山腰，空气也变冷了。终于，他放弃了，带着如怨如慕的心绪回到了小木屋。<br>隔天下午她还是没有出现，再下一天还是如此。他开始寝食难安。钓鱼让他腻味，他也不再读书了。这段时间，他一直在悔恨——恨自己像一个得了相思病的青年学生，恨自己都四十多岁了还像其他蠢货那样着迷于俊颜美腿。直到几天前，他都还不会这般多地留意其她女性，而在这儿不到一周的时间里，他不仅留意着，而且还爱上了人家。<br>第四次上去的时候，他已觉希望破灭——但它又突然复活了：他看到了夕阳下的她。这次的她一袭黑裙，他本该就此猜到这几天她失约的原因，但他没有——直到他走近了她，看到她眼中盈盈的泪水，以及那将真相昭然若揭的战栗的嘴唇。“朱莉，发生什么了？”<br>她靠着他，把脸贴在他的外套上，肩膀不住地颤抖。“我爸爸去世了。”不知为何，他知道这是她的第一滴泪，知道她在守灵夜和葬礼上都没有流泪，到现在才泣不成声。<br>他温柔地环抱着她。他从未亲吻过她，现在也没有，真的。他的嘴唇掠过她的前额，轻快地点在她的头发上——仅此而已。“我也很难过，朱莉。我知道他对你有多么重要。”<br>“他一直就知道自己活不长了。他一定是在指导锶90实验的时候就知道了。但他没有告诉任何人，就连我都不说……我不想活了。爸爸不在了，我活着也没什么指望了——没了，没了，没了！”<br>他紧紧地抱住她。“你会找到什么的，朱莉。比如另一个人。你还年轻，你还是一个孩子，真的。”<br>她猛地抬起了头，用已经无泪的眼睛盯着他。“我不是孩子！你不要再叫我小孩子！”<br>他吓了一跳，放开她后退了几步。他之前从未见过她发怒。他先开口说道：“我不是这意思——”<br>她的愤怒像刚才突然爆发那样迅速地消散了。“我知道你不是要伤害我的感情，兰道夫先生。但我不是孩子了，真的不是。请向我发誓，以后不会再那样叫我。”<br>“好好好，我发誓。”<br>“那现在我得走了。我还有一大堆的事情要办。”<br>“那、那你明天还会来吗？”<br>她久久地凝视着他。眼前升起一层薄雾，如夏天暴雨过后氤氲的空气那般，让她的眼睛微微闪光。“时光机器出了故障，有些部件要换——但我不知道怎么做。我们、我也许还可以再跳跃一次，但我不确定。”<br>“但你会想办法回来的，是吧？”<br>她点了点头。“嗯，我会试试的。那个，兰道夫先生？”<br>“怎么了，朱莉？”<br>“万一我失败了——我要在这里正式地说一声——我爱你。”<br>然后她就走了，轻轻地跑下了山，随后消失在了糖槭林里。点烟的时候，他的手都还在颤抖，让火柴烫到了手指。之后他都不记得自己是怎么回到小木屋、准备晚饭以及上床睡觉的。他确实做了这些事，因为第二天他是从自己的房间醒来的，进了厨房也看到了滴水板上摆着的餐具。<br>他洗干净碗碟，泡了咖啡。整个上午他都在钓台垂钓，好让自己的大脑一片空白。随后他就要面对现实了。现在，对他而言，知道她对自己的爱就已经足够了。短短几个小时之后他就会再次见到她。就算是一台行将报废的时光机器，把她从村里传送到山头也一定没问题。<br>他早早地爬上山顶，坐在石凳上，等着她从树林里出来，然后爬上山坡。他能够感觉到心脏剧的跳动，也知道双手在不停地颤抖。前天，我看到了一只兔子；昨天，是一只鹿；而今天，则是你。<br>他等啊等，但她没有来。次日她也没有来。影子越来越长，气温也越来越冷。他于是走下山丘，走进糖槭林。他一下就发现了一条路，沿着它走到了林子中央，然后穿过它进入小村庄。他停在邮局门口，查看有没有自己的信件。老局长告诉他没有后，他犹豫了一下，然后脱口而出：“这、这附近有没有一家姓丹佛斯的人？”<br>局长摇了摇头。“从没听说过。”<br>“那村里最近有没有举行过葬礼？”<br>“最近一年都没有。”<br>在这之后，虽然他每天下午都上一次山，一直到假期结束，但他心里已经直到她不会再回来了。他已经彻底地失去了她，一如他从未拥有过她一样。每晚他都在村里徘徊，强烈地期望是局长搞错了。但他找不到任何朱莉的蛛丝马迹。他向别人描述朱莉的外貌，得到的也都是否定的答案。<br>十月初他回到市里。虽然他竭尽所能地在安妮面前表现得没有任何异样，但她似乎在见到他的第一眼之后就知道他身上已经发生了某些改变。尽管她什么都没有问，但随着时间一周周过去，她越来越沉默寡言，眼中那让他困惑不已的恐惧也越发明显。<br>他开始每周日下午开车去郊外故地重游。树叶此时已经金黄，天空也比一个月前更蓝了。他在石凳上一坐就是几个小时，注视着她消失的地方。前天，我看到了一只兔子；昨天，是一只鹿；而今天，则是你。<br>之后，在十一月中旬的一个雨夜，他翻出了一个手提箱。箱子是安妮的，他这次翻出来纯属偶然。安妮去邻镇玩宾戈了，家里就他一个人。在看玩四个无聊的电视节目、消磨了两个小时后，他想起了去年冬天收起来的拼图。<br>他不顾一切地想找个什么东西，什么都行，好让他不去想朱莉，所以他爬上阁楼去找拼图。正当他翻箱倒柜之时，一个手提箱从柜子上跌落下来，砸在地上把盖子砸开了。<br>他俯下身把它拿起来。这个手提箱是安妮在婚后带进他们租住的小公寓里的那个。他记得她总是锁着它，还记得她笑着告诉他，就算是妻子，也有要对丈夫保密的东西。经过这些年，箱锁已被锈蚀，刚才那一跌就把锁砸坏了。<br>他正要盖上盖子，却突然停了下来：他看到里面露出了一件白色连衣裙的褶边，布料隐约地感觉很熟悉。他在不久前见过类似的材料——让他想到了棉花糖、海沫和雪花。<br>他把盖子完全打开，手指颤抖着拿起那件衣服。他拎着衣肩，让它自然展开。悬在房中的它就像是纷然飘落的雪花。他凝视了它良久，喉头发紧。然后，他再小心翼翼地把它叠好、放回箱中、再盖上盖子。他把手提箱放回到屋檐下方的柜子。前天，我看到了一只兔子；昨天，是一只鹿；而今天，则是你。<br>雨水滴滴答答地打在屋顶上。咽部的阻塞感越来越严重，一时间他觉得自己就要哭了。然后，他慢慢地走下阁楼，再由旋梯进入起居室。壁炉架上的钟指示时间是十点十四分。只要几分钟后，她就会在街角、从宾戈接送车上下来，然后沿着街道走到前门。然后安妮就会、朱莉就会……朱莉安妮？<br>这是她的全名吗？有可能。一般人取假名时总会保留一部分真名；她也许觉得，既然已经改了姓，那名就是随便改改也不会有问题。在改名换姓之外，她还一定做过其它事情来摆脱时间警察。怪不得她一直不愿意拍照！而她当年羞涩地踏入他的办公室申请工作时，又一定是多么地害怕呀！孤身一人来到一个陌生的时代，不确定自己父亲关于时间的理论是不是正确，也不能保证一个在他四十多岁时会爱上她的男人，在二十多岁时对她的感觉是不是也是一样。但她还是回来了，一如她所允诺的那样。<br>他默默惊叹，二十年来，她一定知道有一天我会登上一座秋山，看到她站在夕阳下，年轻又可爱，然后再一次为她陷入爱河。因为这些对她来说是她的过去的一部分，同时又是我的未来的一部分。但她为什么不告诉我呢？为什么现在不跟我说呢？<br>突然间他恍然大悟。<br>他感到有些呼吸困难，然后走到大厅、披上雨衣步入雨中。他在雨中沿着人行道一直走，雨水打到脸上，顺着脸颊滑落下来：一些是雨滴，一些则是泪水。像安妮、也就是朱莉那样永远年轻漂亮的人，怎么会这样害怕变老呢？不过，难道她没有意识到，在他眼里，她不会变老吗？对他而言，那个他在办公桌前一抬眼就看到的、站在狭小的办公室里、让他一见钟情的她，连一天都没有老过。难道她还没能理解，正是因为这样，山头的那个女孩对他来说才会像是一个陌生人一样啊。<br>他到了大街，沿着它走向街角。接送车刹住停稳时他也刚好赶到，只见她穿着一件白色的宽雨衣，从车上走了下来。喉头的阻塞感尖锐无比，让他无法呼吸。那头蒲公英花色的头发变得更深了，而少女般的魅力也早已不再。但她平和的面容依旧柔美可爱，修长的双腿在十一月淡淡的街灯下优美匀称，却不再是九月金色阳光照耀下的那一对了。<br>她走过来迎接他，他在她眼中看到了那熟悉的恐惧——这让他心痛地无法忍受，因为他已经知道原因。眼前的她朦胧了，他就像个盲人一样走向她。直到站到她面前时，目光才再度澄清起来。他的手穿越时空，抚摸在她那被雨打湿的脸上。她马上便知悉了这一切，那份恐惧也就此永远地消散不见。雨中，他们携着手，漫步回家。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;作者：羅伯特‧F‧楊&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Java考试题目汇总</title>
    <link href="https://saevio.cn/2022/07/15/exam/"/>
    <id>https://saevio.cn/2022/07/15/exam/</id>
    <published>2022-07-14T16:00:00.000Z</published>
    <updated>2024-10-15T03:13:55.410Z</updated>
    
    <content type="html"><![CDATA[<p>答案均由搜题软件搜出，不一定正确，欢迎<a href="https://qm.qq.com/cgi-bin/qm/qr?k=GtIKywDddJguGtKz8TjrFOCw-DWsKJkT&noverify=0">反馈</a></p><span id="more"></span><!-- more --><h3 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h3><p>设有定义：String s &#x3D;“World”;，下列语句错误的是（ ）。</p><p>A char c &#x3D; s.charAt(0);</p><p>B int m &#x3D; s.indexOf(‘r’);</p><p>C int n &#x3D; s.length( );</p><p><strong>D String str &#x3D; s.append(‘2’);</strong></p><hr><p>在Java中，”456”属于（ ）类的对象。</p><p>A Integer <strong>B String</strong> C Number D int</p><hr><p>下列对封装性的描述中，错误的是( )</p><p>A 封装体包含了属性和行为</p><p><strong>B 封装体中的属性和行为的访问权限是相同的</strong></p><p>C 被封装的某些信息在封装体外是不可见的</p><p>D 封装使得抽象的数据类型提高了可重用性</p><hr><p>给出下面代码段, （ ）行将引起一个编译时错误？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123; </span><br><span class="line"><span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Test</span><span class="params">(<span class="type">int</span> a)</span> &#123;m=a;&#125; </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String arg[])</span> &#123;</span><br><span class="line">Test t1,t2;</span><br><span class="line"><span class="type">int</span> j,k;</span><br><span class="line">j=<span class="number">3</span>; k=<span class="number">5</span>;</span><br><span class="line">t1=<span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line">t2=<span class="keyword">new</span> <span class="title class_">Test</span>(k);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>A 行6 B 行1 C 行4 <strong>D 行9</strong></p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Increment</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line">c = <span class="number">2</span>;</span><br><span class="line">System.out.println(c);</span><br><span class="line">System.out.println(c++);</span><br><span class="line">System.out.println(c);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果是：（ ）</p><p><strong>A 2 2 3</strong></p><p>B 3 4 4</p><p>C 2 3 3</p><p>D 2 2 2</p><hr><p>在创建对象时必须（ ）</p><p>A 先声明对象，然后才能使用对象<br>B 先声明对象，为对象分配内存空间，然后才能使用对象<br><strong>C 先声明对象，然后才能使用对象</strong><br>D 先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象</p><hr><p>如果希望某个变量只可以被类本身访问和调用，则应该使用下列( ) 访问控制修饰。</p><p><strong>A private</strong></p><p>B protected</p><p>C default</p><p>D public</p><hr><p>指出下列程序运行的结果 （ ）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Example</span>&#123;</span><br><span class="line">String str=<span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;good&quot;</span>);</span><br><span class="line"><span class="type">char</span>[] ch = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;</span><br><span class="line">Example ex=<span class="keyword">new</span> <span class="title class_">Example</span>();</span><br><span class="line">ex.change(ex.str,ex.ch);</span><br><span class="line">System.out.print(ex.str+<span class="string">&quot; and &quot;</span>);</span><br><span class="line">Sytem.out.print(ex.ch);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">change</span><span class="params">(String str,<span class="type">char</span> ch[])</span>&#123;</span><br><span class="line">str=<span class="string">&quot;test ok&quot;</span>; ch[<span class="number">0</span>]=<span class="string">&#x27;g&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>A test ok and abc</p><p><strong>B good and gbc</strong></p><p>C good and abc</p><p>D test ok and gbc</p><hr><p>下面（ ）操作符的优先级最高？</p><p><strong>A ( )</strong><br>B ||<br>C &amp;&amp;<br>D !</p><hr><p>下面的代码片段实现的是什么功能？( )</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\test.dat&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">file.delete();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>A 移动C:\test.dat<br>B 创建C:\test.dat<br><strong>C 删除C:\test.dat</strong><br>D 打开C:\test.dat文件输出流</p><hr><p>getCustomerInfo()方法如下, try中可以捕获三种类型的异常, 如果在该方法运行中产生了一个IOException ,将会输出( )</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getCustomerInfo</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//一些可以引起异常的语句</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (java.io.FileNotFoundException ex)&#123;</span><br><span class="line">System.out.print(<span class="string">&quot;FileNotFoundException!&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (java.io.IOException ex) &#123;</span><br><span class="line">System.out.print(<span class="string">&quot;IOException!&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span> (java.lang.Exception ex) &#123;</span><br><span class="line">System.out.print(<span class="string">&quot;Exception!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>A IOException!Exception!</p><p>B FileNotFoundException!IOException!</p><p><strong>C IOException!</strong></p><p>D FileNotFoundException!IOException!Exception!</p><hr><p>设有定义 float x&#x3D;3.5f, y&#x3D;4.6f, z&#x3D;5.7f；则以下的表达式中，值为true的是( )</p><p><strong>A x !&#x3D; y</strong><br>B x &gt; y || x &gt; z<br>C z &gt; ( y + x )<br>D x &lt; y &amp; ! ( x &lt; z )</p><hr><p>Java源文件中最多只能有一个（）类，其他类的个数不限。</p><p>A interface<br>B abstract<br>C final<br><strong>D public</strong></p><hr><p>定义有如下的方法:</p><p>abstract void performDial( );</p><p>该方法属于( )。</p><p>A 接口方法</p><p>B 最终方法</p><p>C 空方法</p><p><strong>D 抽象方法</strong></p><hr><p>下列关于for循环和while循环的说法中( )是正确的 ?</p><p>A 两种循环任何时候都可替换</p><p><strong>B while循环能实现的操作, for循环也都能实现</strong></p><p>C 两种循环结构中都必须有 循环体,循环体不能为空</p><p>D while循环判断条件一般是程 序结果, for循环判断条件一般是非程序结果</p><hr><p>参照以下Java代码，以下四个叙述中最确切的是（　　　）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> y;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">fac</span><span class="params">(String s)</span>&#123;</span><br><span class="line">Syatem. out. println(＂字符串:＂+s);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>A x、y和s都是实例变量</p><p><strong>B x是实例变量、y是类变量、s是局部变量</strong></p><p>C x和y是实例变量、s是参数</p><p>D x、y和s都是成员变量</p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">total</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> ( <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">4</span>; i++ )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ( i == <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> ( i == <span class="number">2</span>) <span class="keyword">break</span>;</span><br><span class="line">total += i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>则执行完该程序段后total的值为（ ）。</p><p><strong>A 0</strong></p><p>B 6</p><p>C 1</p><p>D 3</p><hr><p>下面的方法,当输入为2的时候返回值是( )</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getValue</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">switch</span> (i) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:result = result+i;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: result= result+i*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>: result= result+i*<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>A 4</p><p>B 2</p><p>C 0</p><p><strong>D 10</strong></p><hr><p>指出正确的表达式 （ ）</p><p>A double d &#x3D; 0.9239d;</p><p><strong>B long l &#x3D; 0xfffL;</strong></p><p>C Boolean b &#x3D; null;</p><p>D byte a &#x3D; 128;</p><blockquote><p>解析：</p><p>A.没变量名</p><p>B.没错，类型有、变量名有、赋值没错</p><p>C.boolean 类型只能赋值 true 或者false。而这里的Boolean应该是boolean类型的包装类，Boolean类型时可以被赋值为null的。所以此选项缺少变量名</p><p>D.byte赋值范围为-128~127</p></blockquote><hr><p>下面语句在编译时不会出现警告或错误的是( )</p><p>A Boolean b &#x3D; null;</p><p>B int i &#x3D; 10.0;</p><p>C char c &#x3D;” C”;</p><p>D float f &#x3D; 3.14;</p><blockquote><p>全错？</p></blockquote><hr><p>关于被私有访问控制符private修饰的成员变量，以下说法正确的是（ ）</p><p><strong>A 只能被该类自身所访问和修改</strong></p><p>B 可以被两种类访问和引用：该类本身、该类的所有子类</p><p>C 只能被同一个包中的类访问</p><p>D 可以被三种类所引用：该类自身、与它在同一个包中的其他类、在其他包中的该类的子类</p><hr><p>类Test1定义如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1public <span class="keyword">class</span> <span class="title class_">Test1</span>&#123;</span><br><span class="line"><span class="number">2</span><span class="keyword">public</span> <span class="type">float</span> aMethod（<span class="type">float</span> a，<span class="type">float</span> b）&#123; &#125;</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span>&#125;</span><br></pre></td></tr></table></figure><p>将以下（ ）方法插入行3是不合法的。<br>A public int aMethod（int a， int b）{ }</p><p><strong>B public float aMethod（float c，float d）{ }</strong></p><p>C private float aMethod（int a，int b，int c）{ }</p><p>D public float aMethod（float a， float b，float c）{ }</p><hr><p>类Test1、Test2定义如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1public <span class="keyword">class</span> <span class="title class_">Test1</span></span><br><span class="line"><span class="number">2</span>&#123;</span><br><span class="line"><span class="number">3</span><span class="keyword">public</span> <span class="type">float</span> aMethod（<span class="type">float</span> a，<span class="type">float</span> b） <span class="keyword">throws</span> IOException &#123; &#125;</span><br><span class="line"><span class="number">4</span>&#125;</span><br><span class="line"><span class="number">5</span><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test2</span> <span class="keyword">extends</span> <span class="title class_">Test1</span>&#123;</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">7</span>&#125;</span><br></pre></td></tr></table></figure><p>将以下（ ）插入行6是不合法的。</p><p>A public int aMethod（int a，int b）throws Exception{ }<br>B public float aMethod（float p，float q）{ }<br><strong>C float aMethod（float a，float b）{ }</strong><br>D public int aMethod（int a，int b）throws IOException{ }</p><hr><p>关于以下程序代码的说明正确的是（ ）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1class HasStatic&#123;</span><br><span class="line"><span class="number">2</span> <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> x=<span class="number">100</span>;</span><br><span class="line"><span class="number">3</span> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[ ])</span>&#123;</span><br><span class="line"><span class="number">4</span> HasStatic hs1= <span class="keyword">new</span> <span class="title class_">HasStatic</span>( );</span><br><span class="line"><span class="number">5</span> hs1.x++;</span><br><span class="line"><span class="number">6</span> HasStatic hs2=<span class="keyword">new</span> <span class="title class_">HasStatic</span>( );</span><br><span class="line"><span class="number">7</span>hs2.x++;</span><br><span class="line"><span class="number">8</span> hs1=<span class="keyword">new</span> <span class="title class_">HasStatic</span>( );</span><br><span class="line"><span class="number">9</span> hs1.x++;</span><br><span class="line"><span class="number">10</span>HasStatic.x- -;</span><br><span class="line"><span class="number">11</span>System.out.println(“x=”+x);</span><br><span class="line"><span class="number">12</span>&#125;</span><br><span class="line"><span class="number">13</span>&#125;</span><br></pre></td></tr></table></figure><p>A 5行不能通过编译，因为引用了私有静态变量<br>B 10行不能通过编译，因为x是私有静态变量<br><strong>C 程序通过编译，输出结果为：x&#x3D;102</strong><br>D 程序通过编译，输出结果为：x&#x3D;103</p><hr><p>执行语句int i &#x3D; 1, j &#x3D; ++i; 后i与j的值分别为（ ）。</p><p>A 2与1<br><strong>B 2与2</strong><br>C 1与1<br>D 1与2</p><hr><p>在调用方法时,若要使方法改变实参的值,可以( )</p><p><strong>A 用对象作为参数</strong></p><p>B 用基本数据类型作为参数</p><p>C 用String类型做参数</p><p>D使用对象的数据域做参数</p><hr><p>在Java中，在包com.db下定义一个类，要让包com.util下的所有类都可以访问这个类，这个类必须定义为（ ）</p><p><strong>A public</strong><br>B default<br>C protected<br>D private</p><hr><p>关键字supper的作用，叙述错误的是（ ）</p><p><strong>A 用来调用父类中被重载的方法</strong><br>B 用来调用父类的构造函数<br>C 用来调用父类的私有方法<br>D 用来访问父类被隐藏的成员变量</p><hr><p>下列关于异常处理的描述中，错误的是( )</p><p><strong>A 捕获到的异常只能在当前方法中处理，不能在其他方法中处理</strong><br>B 使用throw语句抛出异常<br>C 使用try-catch-finally语句捕获异常<br>D 程序运行时异常由Java虚拟机自动进行处理</p><hr><p>下列（ ）是合法的Java标识符？</p><p>A theLastOne</p><p>B Tree&amp;Glasses</p><p>C 273.5</p><p><strong>D FirstJavaApplet</strong></p><hr><p>以下声明合法的是( )</p><p><strong>A public final static int w() ;</strong></p><p>B abstract double d ;</p><p>C abstract final double hyperbolicCosine();</p><p>D default String s ;</p><hr><p>下面不是合法标识符的是( )</p><p>A $d2000_</p><p>B whataQuiz</p><p>C giveMes</p><p><strong>D 2ofUS</strong></p><hr><p>在Java的类库中,包含实现输入输出操作的包是( )</p><p><strong>A java.io</strong></p><p>B java.awt</p><p>C java.util</p><p>D java.applet</p><hr><p>声明成员变量时,如果不使用任何访问控制符(public, protected, private) ,则以下( ) 类型的类不能对该成员进行直接访问。</p><p><strong>A 不同包中的子类</strong></p><p>B 同一包中的子类</p><p>C 同一包中的非子类</p><p>D 同一类</p><hr><p>下面声明数组的写法错误的是（ ）。</p><p>A int[ ] a;<br>B int[ ] a &#x3D; {1，2，3};<br><strong>C int[3][ ] a;</strong><br>D int a[ ];</p><hr><p>java语言中，负责并发管理的机制是（）</p><p><strong>A 多线程</strong><br>B 虚拟机<br>C 字节码<br>D 垃圾回收</p><hr><p>执行完 int[ ] x&#x3D;new int[10]；后，正确的是（ ）</p><p>A x[9]未定义<br>B x[0]为空<br><strong>C x[9]为0</strong><br>D x[10]为0</p><hr><p>Java语言中，只限子类或者同一包中的类的方法能访问的访问权限是( )</p><p>A public<br>B 无修饰即缺省的访问控制修饰符<br>C private<br><strong>D protected</strong></p><hr><p>()是构成Java程序的基本单位</p><p>A 对象 <strong>B 类</strong> C main方法 D 方法</p><hr><p>在Java中，下列（ ）语句不能通过编译。</p><p>A float f &#x3D; 5 + 5.5;<br>B String s&#x3D; “join”+ 3;<br>C String s&#x3D; “join”+ “was”+ “here”;<br><strong>D int a &#x3D; 3 + 5;</strong></p><hr><p>下列（ ）类的声明是正确的？</p><p>A abstract final class HI{ }<br><strong>B public abstract class Car{ }</strong><br>C abstract private move(){ }<br>D protected private number;</p><hr><p>下述概念中不属于面向对象方法的是（ ）。</p><p>A 继承、多态<br>B 类、封装<br><strong>C 过程调用</strong><br>D 对象、消息</p><hr><p>在switch语句中, switch后面括号内的表达式的类型不能是( )</p><p>A byte</p><p>B int</p><p>C char</p><p><strong>D long</strong></p><hr><p>以下关于构造函数的描述错误的是（ ）。</p><p>A 一般在创建新对象时，系统会自动调用构造函数。<br><strong>B 构造函数的返回类型只能是void型。</strong><br>C 构造函数的主要作用是完成对类的对象的初始化工作。<br>D 构造函数是类的一种特殊函数，它的方法名必须与类名相同。</p><hr><p>A派生出子类B，B派生出子类C，并且在Java源代码中有如下声明：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A a0=<span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line"></span><br><span class="line">A a1=<span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line"></span><br><span class="line">A a2=<span class="keyword">new</span> <span class="title class_">C</span>();</span><br></pre></td></tr></table></figure><p>问以下（ ）说法是正确的</p><p>A 第1、2、3行能通过编译，但第2、3行运行时出错<br><strong>B 第1行、第2行和第3行的声明都是正确的</strong><br>C 只有第1行能通过编译<br>D 第1、2行能通过编译，但第3行编译出错</p><hr><p>下列语句序列执行后</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> i=<span class="number">10</span>, j=<span class="number">18</span>, k=<span class="number">30</span>;</span><br><span class="line"><span class="keyword">switch</span>( j - i ) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span> : k++;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span> : k += <span class="number">2</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>: k += <span class="number">3</span>;</span><br><span class="line"><span class="keyword">default</span> : k /= j;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>k的值是( )<br><strong>A 2</strong><br>B 31<br>C 3<br>D 33</p><hr><p>Java语言的许多特点中，下列（）特点是C++语言所不具备的。</p><p>A 高性能<br><strong>B 跨平台</strong><br>C 有类库<br>D 面向对象</p><hr><p>在Java中用( ) 关键字修饰的方法可以直接通过类名来调用。<br>A void<br><strong>B static</strong><br>C final<br>D private</p><hr><p>为AB类的一个无形式参数无返回值的方法method书写方法头，使得使用类名AB作为前缀就可以调用它，该方法头的形式为( )。</p><p><strong>A static void method( )</strong><br>B public void method( )<br>C final void method( )<br>D abstract void method( )</p><hr><p>下面是People和Child类的定义和构造方法，每个构造方法都输出编号在执行new Child(“mike”)的时候都有哪些构造方法被顺序调用?<br>请选择输出结果()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">People</span> &#123;</span><br><span class="line">String name;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">People</span><span class="params">()</span>&#123; System.out.print(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">People</span><span class="params">(String name)</span> &#123;</span><br><span class="line">System.out.print(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Child</span> <span class="keyword">extends</span> <span class="title class_">People</span> &#123;</span><br><span class="line">People father;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Child</span><span class="params">(String name)</span> &#123;</span><br><span class="line">System.out.print(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">this</span>.name= name;</span><br><span class="line">father= <span class="keyword">new</span> <span class="title class_">People</span>(name + <span class="string">&quot;:F&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Child</span><span class="params">()</span>&#123;</span><br><span class="line">System.out.print(<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>A.312</strong> B.32 C.13 D.132</p><hr><p>在Java中如果父类中的某些方法不包含让任何逻辑，并且并且需要子类重写，可以用()关键字来声明父类中的这些方法</p><p>A.final B.static C.void <strong>D.abstract</strong></p><hr><p>以下关于继承的叙述正确的是()<br><strong>A 在Java中类只允许单一继承</strong><br>B 在Java中一个类只能实现一个接口<br>C 在Java中一个类不能同时继承一个类和实现一个接口<br>D 在Java中接口只允许单一继承</p><blockquote><p>解析:该题考查的是类的继承。继承分为单继承和多继承两种形式。单继承允许一个类可以有多个子类，但只能有一个父类;多继承则允许一一个类不仅可以有多个子类，还可以有多个父类。但需要注意- -点，Java只支持单继承，但可以通过接口实现多继承的功能。一个类可以同时继承一个类和实现一个接口。所以选项A是正确的。</p></blockquote><hr><p>下列属于合法的Java标识符是()</p><p><strong>A.cat</strong> B.5books C.+static D.-3.14159</p><hr><p>有语句String s&#x3D;”hello world”;，以下操作不合法的是()<br>A int i&#x3D;s.length();<br><strong>B s&gt;&gt;&gt;&#x3D;3;</strong><br>C String s&#x3D;s.trim();<br>D String t&#x3D;s+”!”;</p><hr><p>java语言的类间的继承关系是（）</p><p>A 不能继承<br>B 多重的<br><strong>C 单重的</strong><br>D 线程的</p><hr><p>执行语句int i&#x3D;1,j&#x3D;++i;后i与j的值分别为()</p><p>A 2与1</p><p>B 1与1</p><p><strong>C 2与2</strong></p><p>D 1与2</p><hr><p>下面( )行代码正确的声明了一个类方法(静态方法)</p><p>A public int method(inti)</p><p>B protected method(int i)</p><p>C public static method(Strings)</p><p><strong>D public static void method(lnteger i)</strong></p><hr><p>分析如下的java代码段,( )编译没有异常和错误</p><p>A. byte b&#x3D;257; B. boolean b&#x3D;null; C. float f&#x3D;1.3; <strong>D. int i&#x3D;12;</strong></p><hr><p>假设方法unsafe()将抛出lOException,请问可将以下()可以第1行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="keyword">if</span>(unsafe()&#123;<span class="comment">//do something..&#125;</span></span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span> (safe())&#123;<span class="comment">//do the other..&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>A public IOException methodName()<br>B public void methodName()<br><strong>C public void methodName() throws IOException</strong><br>D public void methodName() throw IOException</p><hr><p>下面程序定义了一个类，关于该类说法正确的是( )。<br>abstract class abstract Class{}<br>关于该类说法正确的是()<br>A 该类不能被继承<br>B 该类的方法不能被重载<br>C 该类能调用new abstractClass()方法实例化为一个对象<br><strong>D 该类中可以有普通的方法</strong></p><hr><p>欲构造ArrayList类的一个实例，此类继承了List接口，下列( )是正确的</p><p>A ArrayList myList&#x3D;new Object( );</p><p>B ArrayList myList&#x3D;new List( );</p><p><strong>C List myList&#x3D;new ArrayList( );</strong></p><p>D List myList&#x3D;new List( );</p><hr><p>下列关于包的描述中,错误的是()</p><p><strong>A 包是一种特殊的类</strong></p><p>B 包是若干个类的集合</p><p>C 包是使用package语句创建的</p><p>D 包有有包名包和无名包两种</p><hr><p>有一段java应用程序，它的主类名是a1，那么保存它的源文件名可以是()。</p><p><strong>A. a1.java</strong> B. a1.class C. a1 D.a.jsp</p><hr><p>若a的值为3时，执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (a&gt;<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span> (a&gt;<span class="number">3</span>) </span><br><span class="line">c=<span class="number">2</span>; </span><br><span class="line">elsec=<span class="number">3</span>; </span><br><span class="line">elsec=<span class="number">4</span>;</span><br></pre></td></tr></table></figure><p>c的值是多少? ()<br>A.1 B.2 <strong>C.3</strong> D.4</p><hr><p>若需要定义一个类的作用域或类中使用的方法应使用 ()修饰符。</p><p>A private</p><p>B public</p><p>C package</p><p><strong>D static</strong></p><hr><p>下面（）行代码正确的声明了一个类方法（静态方法）</p><p>A protected method(int i)</p><p>B public static method(Strings s)</p><p>C public int method(int i)</p><p><strong>D protected static void method(Integer i)</strong></p><hr><p>有以下方法的定义请选择该方法的返回类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ReturnType <span class="title function_">method</span><span class="params">(<span class="type">byte</span> x,<span class="type">double</span> y)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="type">short</span>)x/y*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>A int</p><p><strong>B double</strong></p><p>C int</p><p>D short</p><hr><p>在Java中,一个类可同时定义许多同名的方法，这些方法的形式参数个数，类型或顺序各不相同，传回的值也可以不相同。这种面向对象程序的特性称为（）</p><p>A 隐藏</p><p>B 覆盖</p><p>C Java不支持此特性</p><p><strong>D 重载</strong></p><hr><p>一个可以独立运行的Java应用程序（ )</p><p>A 最多只能有两个main( )方法</p><p><strong>B 只能有一个main( )方法</strong></p><p>C 可以有一个或多个main( )方法</p><p>D 可以有一个或零个main( )方法</p><hr><p>下列关于包的描述中，错误的是（）</p><p>A 包是使用package语句创建的</p><p>B 包有有名包和无名包两种</p><p>C 包是若干个类的集合</p><p><strong>D 包是一种特殊的类型</strong></p><hr><p>假设在Java源程序文件“MvClassiava”中只含有一个类,而且这个类必须能够被位于个庞大的软件系统中的所有Java类访问到,那么下面()声明有可能是符合要求的类声明。</p><p>A private class MyClass extends Object</p><p>B public class myclass extends Object</p><p><strong>C public class MyClass</strong></p><p>D class MyClass extends Object</p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">foo</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">String s;</span><br><span class="line">System.out.println(<span class="string">&quot;s=&quot;</span>+s);</span><br><span class="line">&#125;</span><br><span class="line">&#125;??</span><br></pre></td></tr></table></figure><p>输出结果应该是：<br>A 代码得到编译，但捕获到NullPointException异常<br>B 代码得到编译，并输出”s&#x3D;”<br>C 由于Strings没有初始化，代码不能编译通过<br><strong>D 代码得到编译，并输出”s&#x3D;null”</strong></p><hr><p>整型数据类型中，需要内存空间最少的是（)</p><p>A.int B.long C.short <strong>D.byte</strong></p><hr><p>在java中（）关键宇用于终止语句</p><p>A continue</p><p><strong>B break</strong></p><p>C exit</p><p>D return</p><hr><p>下列说法不正确的是</p><p>A 一个子类的对象可以接收父类对象能接收的消息</p><p>B 当子类对象和父类对象能接收同样的消息时，它们针对消息产生的行为可能不同</p><p><strong>C 父类比它的子类的方法更多</strong></p><p>D 子类在构造函数中可以使用super( )来调用父类的构造函数</p><hr><p>下面（）循环会导致死循环？</p><p>A for(int k&#x3D;0;k&lt;0;k++)</p><p>B for(int k&#x3D;0;k&gt;0;k++）</p><p>C for(int k&#x3D;10;k&gt;0;k–)</p><p><strong>D for(int k&#x3D;0;k&lt;10;k–)</strong></p><hr><p>Java为移动设备提供的平台是（ )</p><p>A JDK6</p><p><strong>B Java ME</strong></p><p>C Java SE</p><p>D Java EE</p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a=b=<span class="number">5</span>;</span><br><span class="line">String s1=<span class="string">&quot;祝你今天考出好成绩!&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> s1;</span><br></pre></td></tr></table></figure><p>则表达式a&#x3D;&#x3D;b与s2&#x3D;&#x3D;s1的结果分别是:( )<br><strong>A.true与true</strong></p><p>B.false与true</p><p>C.true与false</p><p>D.false与false</p><hr><p>有语句String s&#x3D;”hello world”;以下操作（）是不合法的？</p><p><strong>A s&gt;&gt;&gt;&#x3D;3 ;</strong></p><p>B String t&#x3D;s+”!”;</p><p>C String ts &#x3D;s.trim;</p><p>D int i&#x3D;s.length();</p><hr><p>设i、j为int型数组变量名，a为int型数组名，以下选项中，正确的赋值语句是()<br>A i&#x3D;i+2</p><p><strong>B a[0]&#x3D;7;</strong></p><p>C i++—j;</p><p>D a(0)&#x3D;66;</p><hr><h3 id="判断题"><a href="#判断题" class="headerlink" title="判断题"></a>判断题</h3><p>接口里不能定义成员变量。</p><p><strong>✅</strong>对</p><p><strong>⬜</strong>错</p><p>equals()方法只有在两个对象的内容一致时返回true</p><p><strong>⬜</strong>对</p><p><strong>❌</strong>错</p><p>父类的构造方法不可以被子类继承</p><p><strong>✅</strong>对</p><p><strong>⬜</strong>错</p><p>构造方法一般不允许有任何返回值，因此需要在构造方法返回类型处标注为void</p><p><strong>⬜</strong>对</p><p><strong>❌</strong>错</p><p>抽象方法必须在抽象类中，所以抽象类中的方法都必须是抽象方法，不能包含带有方法体的具体方法</p><p><strong>⬜</strong>对</p><p><strong>❌</strong>错</p><p>Java的源代码中定义几个类，编译结果就生成几个以“.class”后缀的字节码文件。</p><p><strong>✅</strong>对</p><p><strong>⬜</strong>错</p><p>switch语句中可以没有default子句。</p><p><strong>✅</strong>对</p><p><strong>⬜</strong>错</p><p>maxElements是一个成员变量，声明为:public static final int maxElements&#x3D;100;</p><p><strong>✅</strong>对</p><p><strong>⬜</strong>错</p><p>如果p是父类Parent的对象，而c是子类Child的对象，则语句c &#x3D; p是正确的。</p><p><strong>⬜</strong>对</p><p><strong>❌</strong>错</p><p>异常处理中总是将可能产生异常的语句放在try块中，用catch子句去处理异常，而且一个try块之后只能对应一个catch语句。</p><p><strong>⬜</strong>对</p><p><strong>❌</strong>错</p><p>当声明一个类时，如果用户定义了一个带参数的构造方法，那么系统还会提供给用户一个无参数的构造方法。</p><p><strong>⬜</strong>对</p><p><strong>❌</strong>错</p><p>用“+”可以实现字符串的拼接，用“-” 可以从一个字符串中去除一个字符子串。</p><p><strong>⬜</strong>对</p><p><strong>❌</strong>错</p><p>Java的各种数据类型所占用的内存长度与具体软硬件环境有关。</p><p><strong>⬜</strong>对</p><p><strong>❌</strong>错</p><p>在Java的方法中定义一个常量要用const关键字。</p><p><strong>⬜</strong>对</p><p><strong>❌</strong>错</p><p>在Java中，关键字final修饰一个类后，该类就不能派生出子类。</p><p><strong>✅</strong>对</p><p><strong>⬜</strong>错</p><p>在接口中定义的方法都只能是没有方法体的抽象方法。</p><p><strong>✅</strong>对</p><p><strong>⬜</strong>错</p><p>假设文件”a.txt”的长度是100字节，那么当正常运行语句OutputStream f&#x3D; new FileOutputStream(new File(“a.txt”));后，文件a.txt 的长度变为0字节。</p><p><strong>✅</strong>对</p><p><strong>⬜</strong>错</p><p>垃圾收集的过程在Java程序的生存期中式自动的，不需要分配和释放内存，也避免了内存泄露。</p><p><strong>✅</strong>对</p><p><strong>⬜</strong>错</p><p>如果再定义一个类的时候没有用到关键字extends，则这个类没有直接父类。</p><p><strong>⬜</strong>对</p><p><strong>❌</strong>错</p><p>子类覆盖父类的方法时，权限不能比父类的权限小。</p><p><strong>✅</strong>对</p><p><strong>⬜</strong>错</p><p>用“+”可以实现字符串的拼接，用“-” 可以从一个字符串中去除一个字符子串。</p><p><strong>⬜</strong>对</p><p><strong>❌</strong>错</p><h3 id="填空题"><a href="#填空题" class="headerlink" title="填空题"></a>填空题</h3><p>方法int numberOfDigits(int n)的功能是计算十进制正整数n的位数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">numberOfDigits</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> c=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">n = ______________;</span><br><span class="line">c++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(______________);</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin copy"><input class="copy-area" id="copy_4" value="n / 10"><button class="copy-btn" onclick="util.copy(&quot;copy_4&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><div class="tag-plugin copy"><input class="copy-area" id="copy_5" value="n != 0"><button class="copy-btn" onclick="util.copy(&quot;copy_5&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><details class="tag-plugin colorful folding" color="cyan" child="codeblock"><summary><span>测试代码如下</span></summary><div class="body"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> <span class="title function_">numberOfDigits</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> c=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">n = n/<span class="number">10</span>;</span><br><span class="line">c++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(n!=<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">System.out.println(numberOfDigits(<span class="number">1234</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details><hr><p>子类SubClass求x的n次方。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SuperClass</span> &#123;</span><br><span class="line"><span class="type">float</span> x;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">SuperClass( <span class="type">float</span> x , <span class="type">int</span> n ) &#123;</span><br><span class="line"><span class="built_in">this</span>.x = x ;</span><br><span class="line"><span class="built_in">this</span>.n = n;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SubClass</span> <span class="keyword">extends</span> <span class="title class_">SuperClass</span> &#123;</span><br><span class="line">SubClass( <span class="type">float</span> x , <span class="type">int</span> n ) &#123;</span><br><span class="line">______________;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">exp</span><span class="params">( )</span> &#123;</span><br><span class="line"><span class="type">double</span> <span class="variable">s</span> <span class="operator">=</span> <span class="number">1.0</span>;</span><br><span class="line"><span class="keyword">for</span> ( <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i&lt;=n; i++ ) &#123;</span><br><span class="line">s =______________;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin copy"><input class="copy-area" id="copy_6" value="super ( x , n )"><button class="copy-btn" onclick="util.copy(&quot;copy_6&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><div class="tag-plugin copy"><input class="copy-area" id="copy_7" value="s * x"><button class="copy-btn" onclick="util.copy(&quot;copy_7&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><details class="tag-plugin colorful folding" color="cyan" child="codeblock"><summary><span>测试代码如下</span></summary><div class="body"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SuperClass</span> &#123;</span><br><span class="line"><span class="type">float</span> x;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">SuperClass( <span class="type">float</span> x , <span class="type">int</span> n ) &#123;</span><br><span class="line"><span class="built_in">this</span>.x = x ;</span><br><span class="line"><span class="built_in">this</span>.n = n;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SubClass</span> <span class="keyword">extends</span> <span class="title class_">SuperClass</span> &#123;</span><br><span class="line">SubClass( <span class="type">float</span> x , <span class="type">int</span> n ) &#123;</span><br><span class="line"><span class="built_in">super</span>(x, n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">exp</span><span class="params">( )</span> &#123;</span><br><span class="line"><span class="type">double</span> <span class="variable">s</span> <span class="operator">=</span> <span class="number">1.0</span>;</span><br><span class="line"><span class="keyword">for</span> ( <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i&lt;=n; i++ ) &#123;</span><br><span class="line">s =s*x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">SubClass</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SubClass</span>(<span class="number">5</span>,<span class="number">3</span>);</span><br><span class="line">System.out.print(a.exp());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details><hr><p>有一对免子，从出生后第3个月起每个月都生对兔子 ，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少?</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fibonacci</span> <span class="params">(<span class="type">int</span> m)</span> &#123;</span><br><span class="line"><span class="type">int</span> f1= <span class="number">1</span>,f2= <span class="number">1</span>,f;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">3</span>;______________;i++)&#123;</span><br><span class="line">f = f2;</span><br><span class="line">f2 = ______________;`</span><br><span class="line">f1= f;</span><br><span class="line">System.out.println(<span class="string">&quot;第&quot;</span> + i +<span class="string">&quot;个月的免子对数: &quot;</span>+f2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin copy"><input class="copy-area" id="copy_8" value="i <= m"><button class="copy-btn" onclick="util.copy(&quot;copy_8&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><div class="tag-plugin copy"><input class="copy-area" id="copy_9" value="f2 + f1"><button class="copy-btn" onclick="util.copy(&quot;copy_9&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><details class="tag-plugin colorful folding" color="cyan" child="codeblock"><summary><span>测试代码如下</span></summary><div class="body"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fibonacci</span> <span class="params">(<span class="type">int</span> m)</span> &#123;</span><br><span class="line"><span class="type">int</span> f1= <span class="number">1</span>,f2= <span class="number">1</span>,f;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">3</span>;i&lt;=m;i++)&#123;</span><br><span class="line">f = f2;</span><br><span class="line">f2 =f2+f1+<span class="number">1</span>;</span><br><span class="line">f1= f;</span><br><span class="line">System.out.println(<span class="string">&quot;第&quot;</span> + i +<span class="string">&quot;个月的免子对数: &quot;</span>+f2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">fibonacci(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details><hr><p>程序获取当前日期,将日期字符串输出;<br>截取日期字符串中从第11位开始到字母C之前的字符串，并输出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Class1</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(Srting args[])</span>&#123;</span><br><span class="line">Date date1=<span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">System. out. println(datel);</span><br><span class="line">String t=datel.toString0;</span><br><span class="line"><span class="type">int</span> <span class="variable">endPos</span> <span class="operator">=</span>______________;</span><br><span class="line">t=______________;</span><br><span class="line">System. out.println(t);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin copy"><input class="copy-area" id="copy_10" value="11"><button class="copy-btn" onclick="util.copy(&quot;copy_10&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><div class="tag-plugin copy"><input class="copy-area" id="copy_11" value="t.substring(endPos,t.indexOf(C))"><button class="copy-btn" onclick="util.copy(&quot;copy_11&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><details class="tag-plugin colorful folding" color="cyan" child="codeblock"><summary><span>测试代码如下</span></summary><div class="body"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test2007210530</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;</span><br><span class="line">        Date date1=<span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        System.out.println(date1);</span><br><span class="line">        String t=date1.toString();</span><br><span class="line">        <span class="type">int</span> <span class="variable">endPos</span> <span class="operator">=</span><span class="number">11</span>;</span><br><span class="line">        t=t.substring(endPos,t.indexOf(<span class="string">&#x27;H&#x27;</span>));</span><br><span class="line">        System. out.println(t);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details><hr><p>方法void primeNumber(int n )将一个正整数分解质因数。例如：输入90，打印出2*3*3*5。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">primeNumber</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line"><span class="type">int</span> k=<span class="number">2</span>;</span><br><span class="line">System.out.print(n + <span class="string">&quot;=&quot;</span> );</span><br><span class="line"><span class="keyword">while</span>(k &lt;= n)&#123;</span><br><span class="line"><span class="keyword">if</span>(k==n)&#123;</span><br><span class="line">System.out.println(n);</span><br><span class="line">______________;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n%k == <span class="number">0</span>) &#123;</span><br><span class="line">System.out.print(k + <span class="string">&quot;*&quot;</span>);</span><br><span class="line">n=______________;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> k++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin copy"><input class="copy-area" id="copy_12" value="break"><button class="copy-btn" onclick="util.copy(&quot;copy_12&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><div class="tag-plugin copy"><input class="copy-area" id="copy_13" value="n / k"><button class="copy-btn" onclick="util.copy(&quot;copy_13&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><details class="tag-plugin colorful folding" color="cyan" child="codeblock"><summary><span>测试代码如下</span></summary><div class="body"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">primeNumber</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line"><span class="type">int</span> k=<span class="number">2</span>;</span><br><span class="line">System.out.print(n + <span class="string">&quot;=&quot;</span> );</span><br><span class="line"><span class="keyword">while</span>(k &lt;= n)&#123;</span><br><span class="line"><span class="keyword">if</span>(k==n)&#123;</span><br><span class="line">System.out.println(n);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n%k == <span class="number">0</span>) &#123;</span><br><span class="line">System.out.print(k + <span class="string">&quot;*&quot;</span>);</span><br><span class="line">n=n/k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> k++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">primeNumber(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details><hr><p>方法int maxDigit(int n)的功能是找出十进制整数n各位中最大的一位数字。例如，n&#x3D;23765，该方法的返回值是7。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="type">int</span> <span class="title function_">maxDigit</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> c=<span class="number">0</span>,d;</span><br><span class="line"><span class="keyword">while</span>(n&gt;<span class="number">0</span>)&#123;</span><br><span class="line">d = ______________;</span><br><span class="line"><span class="keyword">if</span>(d&gt;c) c=d;</span><br><span class="line">n/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">______________;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin copy"><input class="copy-area" id="copy_14" value="n % 10"><button class="copy-btn" onclick="util.copy(&quot;copy_14&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><div class="tag-plugin copy"><input class="copy-area" id="copy_15" value="return c"><button class="copy-btn" onclick="util.copy(&quot;copy_15&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><details class="tag-plugin colorful folding" color="cyan" child="codeblock"><summary><span>测试代码如下</span></summary><div class="body"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> <span class="title function_">maxDigit</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> c=<span class="number">0</span>,d;</span><br><span class="line"><span class="keyword">while</span>(n&gt;<span class="number">0</span>)&#123;</span><br><span class="line">d = n%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(d&gt;c) c=d;</span><br><span class="line">n/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">System.out.println(maxDigit(<span class="number">23765</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details><hr><p>方法 void MaxAndMin（int a[ ]）求数组中最大值和最小值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">MaxAndMin</span><span class="params">(<span class="type">int</span> a[])</span>&#123;</span><br><span class="line"><span class="type">int</span> i,Max,Min;</span><br><span class="line">Max = Min =______________ ;</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">1</span> ; i &lt; a.length; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (______________)Min = a[i];</span><br><span class="line"><span class="keyword">if</span> ( a[i]&gt;Max ) Max = a[i];</span><br><span class="line">&#125;</span><br><span class="line">System.out.println( Max+<span class="string">&quot; &quot;</span>+Min );</span><br><span class="line">System.out.println( );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin copy"><input class="copy-area" id="copy_16" value="a[0]"><button class="copy-btn" onclick="util.copy(&quot;copy_16&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><div class="tag-plugin copy"><input class="copy-area" id="copy_17" value="a[i] < Min"><button class="copy-btn" onclick="util.copy(&quot;copy_17&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><details class="tag-plugin colorful folding" color="cyan" child="codeblock"><summary><span>测试代码如下</span></summary><div class="body"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//import java.util.Scanner;</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">MaxAndMin</span><span class="params">(<span class="type">int</span> a[])</span>&#123;</span><br><span class="line"><span class="type">int</span> i,Max,Min;</span><br><span class="line">Max = Min =a[<span class="number">0</span>] ;</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">1</span> ; i &lt; a.length; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> ( a[i]&lt;Min )Min = a[i];</span><br><span class="line"><span class="keyword">if</span> ( a[i]&gt;Max )Max = a[i];</span><br><span class="line">&#125;</span><br><span class="line">System.out.println( Max+<span class="string">&quot; &quot;</span>+Min );</span><br><span class="line">System.out.println( );</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="comment">//Scanner sc=new Scanner(System.in);</span></span><br><span class="line"><span class="comment">//String a[] = sc.nextLine().split(&quot; &quot;);</span></span><br><span class="line"><span class="comment">//int n[] = new int[a.length];</span></span><br><span class="line"><span class="comment">//for(int i=0;i&lt;a.length;i++)&#123;</span></span><br><span class="line"><span class="comment">//n[i]=Integer.parseInt(a[i]);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//MaxAndMin(n);</span></span><br><span class="line">MaxAndMin(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;);</span><br><span class="line">        <span class="comment">//int [] a = &#123;1,2,3&#125;;</span></span><br><span class="line"><span class="comment">//MaxAndMin(a);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details><hr><p>方法void narcissistic（）打印所有的水仙花数。</p><p>“水仙花数 “是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个 “水仙花数 “，因为153&#x3D;1的三次方＋5的三次方＋ 3的三次方。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">narcissistic</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> b1, b2, b3;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> m=<span class="number">101</span>; m&lt;<span class="number">1000</span>; m++) &#123;</span><br><span class="line">b3 = m / <span class="number">100</span>;</span><br><span class="line">b2 = ______________;</span><br><span class="line">b1 = m % <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(______________ == m) &#123;</span><br><span class="line">System.out.println(m+<span class="string">&quot;是一个水仙花数&quot;</span>); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin copy"><input class="copy-area" id="copy_18" value="m / 10 % 10"><button class="copy-btn" onclick="util.copy(&quot;copy_18&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><div class="tag-plugin copy"><input class="copy-area" id="copy_19" value="b1 * b1 * b1 + b2 * b2 * b2 + b3 * b3 * b3"><button class="copy-btn" onclick="util.copy(&quot;copy_19&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><details class="tag-plugin colorful folding" color="cyan" child="codeblock"><summary><span>测试代码如下</span></summary><div class="body"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">narcissistic</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> b1, b2, b3;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> m=<span class="number">101</span>; m&lt;<span class="number">1000</span>; m++) &#123;</span><br><span class="line">b3 = m / <span class="number">100</span>;</span><br><span class="line">b2 = m/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">b1 = m % <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(b1*b1*b1+b2*b2*b2+b3*b3*b3 == m) &#123;</span><br><span class="line">System.out.println(m+<span class="string">&quot;是一个水仙花数&quot;</span>); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">narcissistic();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details><hr><p>方法int sigmaEvenNum（int[]a）的功能是求已知数组中偶数的个数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sigmaEvenNum</span><span class="params">(<span class="type">int</span> a[])</span>&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">s</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (______________) &#123;</span><br><span class="line"><span class="keyword">if</span>(______________)</span><br><span class="line">s++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin copy"><input class="copy-area" id="copy_20" value="int i = 0 ; i < a.length ; i++"><button class="copy-btn" onclick="util.copy(&quot;copy_20&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><div class="tag-plugin copy"><input class="copy-area" id="copy_21" value="a[i] % 2 == 0"><button class="copy-btn" onclick="util.copy(&quot;copy_21&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><details class="tag-plugin colorful folding" color="cyan" child="codeblock"><summary><span>测试代码如下</span></summary><div class="body"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sigmaEvenNum</span><span class="params">(<span class="type">int</span> a[])</span>&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">s</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.length;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">s++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">int</span> a[]= &#123;<span class="number">1</span>,<span class="number">23</span>,<span class="number">43</span>,-<span class="number">36</span>,<span class="number">4</span>&#125;;</span><br><span class="line">System.out.println(sigmaEvenNum(a));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details><hr><p>类Fact求n的阶乘，请将程序补充完整。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Fact</span> &#123;</span><br><span class="line"><span class="type">int</span> n ;</span><br><span class="line">Fact( <span class="type">int</span> n ) &#123;</span><br><span class="line">______________;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">fact</span><span class="params">( )</span> &#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++ )</span><br><span class="line">f = ______________;</span><br><span class="line"><span class="keyword">return</span> f;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><div class="tag-plugin copy"><input class="copy-area" id="copy_22" value="this.n = n"><button class="copy-btn" onclick="util.copy(&quot;copy_22&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li><li><div class="tag-plugin copy"><input class="copy-area" id="copy_23" value="f * i"><button class="copy-btn" onclick="util.copy(&quot;copy_23&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li></ol><details class="tag-plugin colorful folding" color="cyan" child="codeblock"><summary><span>测试代码如下</span></summary><div class="body"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Fact</span>&#123;</span><br><span class="line"><span class="type">int</span> n ;</span><br><span class="line">Fact( <span class="type">int</span> n ) &#123;</span><br><span class="line"><span class="built_in">this</span>.n=n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">fact</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++ )</span><br><span class="line">f = f*i;</span><br><span class="line"><span class="keyword">return</span> f;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">Fact a=<span class="keyword">new</span> <span class="title class_">Fact</span>(<span class="number">10</span>);</span><br><span class="line">System.out.print(a.fact());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details><hr><h3 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h3><p>类CountChar有方法int countNum(String str , char a),该方法的功能是找出给定字符a在字符串str中出现的次数。<br>例如,countNum(“Welcome”,’e’)的返回值是2.<br>请上传源代码截图,截图需带类名和行号。类名用给定类名+学号命名,例如161007112王明, CountChar类名为CountChar161007112java ,其余类名依此规则定义。并将运行结果截图上传,运行结果需要带输出窗口的运行时间。<br><a href="https://api.dzzui.com/api/lanzoujx?url=https://mengchunm.lanzouw.com/i7mj203r320b&type=down">最小截图工具.exe</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CountChar</span>&#123;</span><br><span class="line"><span class="type">int</span> <span class="title function_">countNum</span><span class="params">(String str,<span class="type">char</span> a)</span>&#123;</span><br><span class="line"><span class="type">int</span> counts=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;str.length();i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(str.charAt(i)==a)</span><br><span class="line">counts++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> counts;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test2007210530</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">CountChar a=<span class="keyword">new</span> <span class="title class_">CountChar</span>();</span><br><span class="line">System.out.println(a.countNum(<span class="string">&quot;Welcome&quot;</span>,<span class="string">&#x27;e&#x27;</span>));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>定义一个表示学生信息的类Student，要求如下：</p><ol><li><p>类Student的成员变量： sNO表示学号；sName表示姓名；sSex表示性别；sAge表示年龄；sJava：表示Java课程成绩。</p></li><li><p>类Student带参数的构造方法： 在构造方法中通过形参完成对成员变量的赋值操作。</p></li><li><p>类Student的成员的get和set方法。</p></li><li><p>根据类Student的定义，使用数组存储创建五个该类的对象，输出每个学生的信息，计算并输出这五个学生Java语言成绩的 平均值，以及计算并输出他们Java语言成绩的最大值和最小值。</p><p>请上传源代码截图，截图需带类名和行号。类名用给定类名+学号命名，例如161007112王明，Student类名为 Student161007112.java，其余类名依此规则定义。并将运行结果截图上传，运行结果需要带输出窗口的运行时间。<br><a href="https://api.dzzui.com/api/lanzoujx?url=https://mengchunm.lanzouw.com/i7mj203r320b&type=down">最小截图工具.exe</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> String id;<span class="comment">//学号</span></span><br><span class="line">        <span class="keyword">private</span> String name;<span class="comment">//姓名</span></span><br><span class="line">        <span class="keyword">private</span> String sex;<span class="comment">//性别</span></span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> age;<span class="comment">//年龄</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">//设置学生学号</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setsNO</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取学生学号</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getsNO</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置姓名</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setsName</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取姓名</span></span><br><span class="line"> <span class="keyword">public</span> String <span class="title function_">getsName</span><span class="params">()</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//设置性别</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setsSex</span><span class="params">(String sex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取性别</span></span><br><span class="line"> <span class="keyword">public</span> String <span class="title function_">getsSex</span><span class="params">()</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> sex;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//设置年龄  </span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setsAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//获取年龄</span></span><br><span class="line"> <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getsAge</span><span class="params">()</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重写toString()</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;学号：&quot;</span>+id+<span class="string">&quot; 姓名：&quot;</span>+name+<span class="string">&quot; 性别：&quot;</span>+sex+<span class="string">&quot; 年龄：&quot;</span>+age;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">                 <span class="type">test</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">test</span>();</span><br><span class="line">                 s.setsNO(<span class="string">&quot;20072105&quot;</span>);</span><br><span class="line">                 s.setsName(<span class="string">&quot;摇摆震&quot;</span>);</span><br><span class="line">                 s.setsSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">                 s.setsAge(<span class="number">20</span>);</span><br><span class="line">                 System.out.println(s);<span class="comment">//打印内容为重写toString()后的内容 </span></span><br><span class="line">        &#125;     </span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><hr><p>类Count有方法int countNum(String str)，该方法的功能是统计已知字符串str中数字的个数。</p><p>例如，countNum(“A42B83C2D”)的返回值是5。</p><p>请上传源代码截图，截图需带类名和行号。类名用给定类名+学号命名，例如161007112王明，Count类名为 Count161007112.java，其余类名依此规则定义。并将运行结果截图上传，运行结果需要带输出窗口的运行时间。<br><a href="https://api.dzzui.com/api/lanzoujx?url=https://mengchunm.lanzouw.com/i7mj203r320b&type=down">最小截图工具.exe</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Count</span> &#123;</span><br><span class="line"><span class="type">int</span> <span class="title function_">countNum</span><span class="params">(String str)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> result=<span class="number">0</span>;</span><br><span class="line"><span class="type">byte</span> num[]=str.getBytes();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;num.length;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(num[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;num[i]&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">result++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">String s=<span class="string">&quot;A42B83C2D&quot;</span>;</span><br><span class="line">Count o=<span class="keyword">new</span> <span class="title class_">Count</span>();</span><br><span class="line">System.out.print(o.countNum(s)) ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>编写个计算图形面积的程序，程序能够计算并输出圆的面积。设计个图形抽象类: Shape，Shape有两个抽象方法:计算面积getArea( ) 方法。显示图形的基本信息toString( )方法。和在此基础上派生出Circle类。</p><ol><li><p>Circle类基本信息:圆心坐标、半径，園心坐标使用系统提供的Point2D类进行声明。</p></li><li><p>Circle有默认的构造方法及带参数的构造方法，默认是圆心在(0,0)点，半径为1.0的圆;成员变量为private属性，成员方法为public属性。</p></li><li><p>Circle类有属性的get和set方法.<br>请上传源代码截至，截图需带美名和行号。类名用给定类名+学号命名，例如161007112王明，Shape类名为<br>Shape161007112.java，其余类名依此规则定义。并将运行结果截图上传，运行结果需要带输出窗口的运行时间。<br><a href="https://api.dzzui.com/api/lanzoujx?url=https://mengchunm.lanzouw.com/i7mj203r320b&type=down">最小截图工具.exe</a></p></li></ol><hr><p>Points2D类表示平面坐标下点的坐标，必须满足如下要求：</p><ol><li><p>类Points2D的属性有：x,y 分别表示点的横纵坐标</p></li><li><p>类Points2D 的方法有：</p><p>属性x,y的get和set方法 Points2D( ) : 构造函数，将x和y坐标都置0</p><p>copy Points2D( double x, double y) : 构造函数，设置x和y为给定坐标。</p><p>copy double distance(Points2D a) : 计算当前点与给定点的距离。</p><p>copy double distance(double x，double y)：计算当前点与给定x,y坐标点的距离。</p><p>copy String ToString( ) : 输出当前点的坐标信息。</p><p>请写出测试方法，分别计算给定两点的距离的两种情况，并输出，然后输出当前点的坐标信息。</p><p>请上传源代码截图，截图需带类名和行号。类名用给定类名+学号命名，例如161007112王明，Points2D类名为 Points2D161007112.java，其余类名依此规则定义。并将运行结果截图上传，运行结果需要带输出窗口的运行时间。<br><a href="https://api.dzzui.com/api/lanzoujx?url=https://mengchunm.lanzouw.com/i7mj203r320b&type=down">最小截图工具.exe</a></p></li></ol><hr><p>设计一个名为Rectangle的矩形类，并实现Comparable接口，这个类包括:</p><ol><li><p>两个名为width和height的double数据域，它们分别表示矩形的宽和高；</p></li><li><p>Rectangle的无参构造方法，width和height的默认值都为1；</p></li><li><p>Rectangle的有参构造方法，用width和height为指定值构造一个矩形;</p></li><li><p>一个名为getArea()的函数返回矩形的面积;</p></li><li><p>一个名为getPerimeter()的函数返回矩形的周长；</p></li><li><p>compareTo（Rectangle a）方法用于比较和给定矩形的面积。<br>编写一个测试程序，创建一个Rectangle对象，从键盘输入矩形的宽和高，然后输出矩形的面积和周长，再创建一个矩形对象，并比较两个矩形大小，输出结果。<br>请上传源代码截图，截图需带类名和行号。类名用给定类名+学号命名，例如161007112王明，Rectangle类名为Rectangle161007112.java，其余类名依此规则定义。并将运行结果截图上传，运行结果需要带输出窗口的运行时间。<br><a href="https://api.dzzui.com/api/lanzoujx?url=https://mengchunm.lanzouw.com/i7mj203r320b&type=down">最小截图工具.exe</a></p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;答案均由搜题软件搜出，不一定正确，欢迎&lt;a href=&quot;https://qm.qq.com/cgi-bin/qm/qr?k=GtIKywDddJguGtKz8TjrFOCw-DWsKJkT&amp;noverify=0&quot;&gt;反馈&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Cisco答案</title>
    <link href="https://saevio.cn/2022/05/11/Cisco/"/>
    <id>https://saevio.cn/2022/05/11/Cisco/</id>
    <published>2022-05-10T16:00:00.000Z</published>
    <updated>2024-10-15T03:13:55.404Z</updated>
    
    <content type="html"><![CDATA[<p>方便复习用</p><span id="more"></span><!-- more --><p><a href="https://lms-cn.netacad.com/course/view.php?id=21004">思科路由与交换技术传送门</a><br><a href="/Cisco/1-4">模块 1 - 4：交换的概念、VLAN 和 VLAN 间路由</a><br><a href="/Cisco/5-6">模块 5 - 6：冗余网络</a><br><a href="/Cisco/7-9">模块 7 - 9：高可用和高可靠网络</a><br><a href="/Cisco/10-13">模块 10 - 13：第 2 层安全和 WLAN</a><br><a href="/Cisco/14-16">模块 14 - 16：路由的概念和配置</a><br><a href="/Cisco/%E6%A8%A1%E6%8B%9F%E8%80%83%E8%AF%95">模拟考试</a><br><a href="/Cisco/%E6%9C%9F%E6%9C%AB%E6%8A%80%E8%83%BD%E8%80%83%E8%AF%95">期末技能考试</a></p><p><a href="/Cisco/practice">思科大作业</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;方便复习用&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>第一篇文章</title>
    <link href="https://saevio.cn/2022/03/20/first/"/>
    <id>https://saevio.cn/2022/03/20/first/</id>
    <published>2022-03-19T16:00:00.000Z</published>
    <updated>2024-10-15T03:18:20.799Z</updated>
    
    <content type="html"><![CDATA[<p>这是窝的第一篇文章诶!</p><span id="more"></span><!-- more --><p>超链接测试：<br><a href="https://baidu.com/">百度</a><br>外链测试：</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="充充&nbsp;-&nbsp;一个贼牛逼的大佬" href="https://charxd.netlify.app/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">充充&nbsp;-&nbsp;一个贼牛逼的大佬</span><span class="cap link footnote">https://charxd.netlify.app/</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div><p>引用标签:</p><p>test</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello world&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是窝的第一篇文章诶!&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
